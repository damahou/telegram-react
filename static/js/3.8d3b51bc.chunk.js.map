{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Utils/Language.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/LeaveVoiceChatDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Popup/ReportChatDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Utils/Game.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Utils/Text.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Assets/Icons/CallEnd.js","Assets/Icons/Mic.js","Assets/Icons/MicOff.js","Components/Calls/BlobDrawable.js","Components/Calls/LineBlobDrawable.js","Components/Calls/TopBar.js","Components/Calls/GroupCallTopPanel.js","Assets/Icons/PlaylistEdit.js","Assets/Icons/Block.js","Assets/Icons/Broom.js","Assets/Icons/Phone.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Calls/GroupCallJoinPanelSubtitle.js","Components/Calls/GroupCallRecentParticipants.js","Components/Calls/GroupCallJoinPanel.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/ForwardTargetChat.js","Components/Popup/ForwardDialog.js","Components/Calls/Button.js","Components/Calls/GroupCallMicButtonHint.js","Components/Calls/GroupCallMicButton.js","Components/Calls/GroupCallPanelButtons.js","Assets/Icons/AddMember.js","Assets/Icons/MicOutlined.js","Assets/Icons/MicOffOutlined.js","Components/Calls/GroupCallParticipant.js","Components/Calls/GroupCallParticipants.js","Components/Calls/GroupCallMicAmplitude.js","Components/Calls/GroupCallSettings.js","Assets/Icons/Tune.js","Components/Calls/GroupCallSettingsButton.js","Components/Calls/GroupCallPanel.js","Components/Calls/GroupCall.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Player/PipPlayer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","AlertDialog","handleClose","onClose","params","t","title","message","ok","cancel","getFormattedText","open","manager","modalManager","transitionDuration","classes","paper","DialogContentText","DialogActions","onClick","color","withTranslation","BlockSenderDialog","reportSpam","deleteChat","handleReportSpamChange","handleDeleteChatChange","sender","text","entities","reportText","user_id","LStore","formatString","getUserShortName","getSimpleMarkupEntities","getString","chat_id","location","getChatLocation","address","isChannelChat","aria-labelledby","FormControlLabel","control","Checkbox","checked","onChange","label","ClearHistoryDialog","handleRevokeChange","revoke","chatId","canBeDeletedForAllUsers","getChatShortTitle","ChatTile","isPrivateChat","style","marginLeft","prevChatId","ChatStore","get","can_be_deleted_for_all_users","sprintf","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DeleteMessagesDialog","messageIds","count","confirm","isSupergroup","formatPluralString","prevMessageIds","messageId","MessageStore","InputPasswordDialog","handleChange","e","password","target","handleClickShowPassword","showPassword","getErrorMessage","error","startsWith","str","replace","parseInt","timeString","floor","loading","passwordHint","password_hint","errorMessage","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","autoFocus","autoComplete","type","disabled","endAdornment","InputAdornment","position","IconButton","aria-label","edge","FormHelperText","LeaveChatDialog","getDeleteDialogText","chat","supergroup","SupergroupStore","supergroup_id","is_channel","LeaveVoiceChatDialog","discard","handleDiscardChange","NotificationTimer","handleTimer","Date","seconds","expire","timeout","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","setInterval","Typography","toFixed","CircularProgress","size","variant","OpenGameDialog","game","userId","getUserFullName","OpenUrlDialog","url","overflowWrap","PinMessageDialog","prevMessageId","ReportChatDialog","handleReport","ListItem","button","ListItemText","primary","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","domain","bot_user_id","request_write_access","text1","UserStore","getMyId","entities1","option1","option2","text2","entities2","display","flexDirection","UnpinMessageDialog","Actions","leaveChat","clearHistory","deleteMessages","pinMessage","unpinMessage","alert","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","leaveVoiceChatAlert","reportChatAlert","onClientUpdateReportChat","update","onClientUpdateBlockSender","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateLeaveVoiceChatAlert","onClientUpdateOpenGameAlert","isVerified","handleOpenGameContinue","onClientUpdateOpenUrlAlert","ask","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","enqueueSnackbar","closeSnackbar","action","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","onClientUpdateAlert","onClientUpdateUnpinMessage","isMeChat","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","onClientUpdateLeaveChat","onClientUpdateClearHistory","handleClearHistoryContinue","AppStore","getChatId","request","remove_from_chat_list","handleScheduledAction","handleLeaveContinue","a","undo","getLeaveChatNotification","requests","isChatMember","push","isCreator","status","is_member","handleDeleteMessagesContinue","clearSelection","message_ids","clientUpdateType","snackKey","clientUpdate","inProgress","addScheduledAction","Number","MAX_VALUE","persist","removeScheduledAction","pinMessageAction","canPinMessages","unpinMessageAction","closePinned","unpinAllMessages","data","getClientData","clientData","unpinned","handleAlertContinue","onResult","event","preventDefault","newWindow","window","opener","sharedPreferences","JSON","parse","localStorage","getItem","existing","hash","addHash","encodeURIComponent","chars","array","Uint8Array","crypto","getRandomValues","setItem","stringify","index","indexOf","curHash","substring","openGameInBrowser","handleRequestUrlContinue","values","buttonId","message_id","button_id","allow_write_access","httpUrl","handleInputPasswordContinue","onCloseDialog","handleBlockSenderContinue","blockSender","reason","reportChat","canDeleteChat","handleLeaveVoiceChatContinue","resultParams","handleReportChatContinue","showSnackbar","Close","on","off","PureComponent","enhance","compose","withSnackbar","DialogTitle","onFastUpdatingComplete","forceUpdate","onUpdateChatTitle","nextProps","nextState","showSavedMessages","isChatVerified","getChatTitle","defaultProps","DialogStatus","onUpdateUserStatus","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","basic_group","onUpdateSupergroup","externalSubtitle","classNames","Chat","handleClick","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","alignItems","ListItemIcon","tabIndex","disableRipple","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","onWindowResize","setSelection","supergroupMembers","photoAndVideo","document","audio","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","current","item","left","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","clamp","offsetWidth","setTimeout","handleFilterClick","createRef","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","ref","r","set","onMouseDown","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","handleDelete","anchorPosition","showOpenMessage","can_be_forwarded","can_be_deleted_only_for_self","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","stopPropagation","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","photo","handleOpenContextMenu","contextMenu","clientX","top","clientY","handleCloseContextMenu","nextContext","FileStore","openMedia","minithumbnail","miniSrc","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","sizes","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","thumbnail","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","caption","decodedUrl","decodeURI","hostname","URL","split","punycode","ToUnicode","console","content","description","animation","video","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","filter","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","trim","links","map","mail","typeUrl","getTitleFromUrl","SafeLink","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","getDurationString","overScanCount","SharedMediaContent","items","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","completed","migrateCompleted","getFilter","handleScroll","container","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","query","sender_user_id","from_message_id","limit","finally","currentParams","total_count","concat","isValidMessage","incompleteResults","setItems","store","getStore","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","addEventListener","removeEventListener","loadUsersContent","loadChatsContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","height","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","voice_note","copy","navigator","clipboard","writeText","copyOld","element","successful","createElement","contentEditable","readOnly","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","ChatDetails","loadContent","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","username","getChatUsername","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","clientHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","toLowerCase","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","chatIds","getChatUserId","offset_chat_id","chat_ids","minHeight","chats","SharedMediaHeader","handleSearch","searchInputRef","innerText","onSearch","onCloseSearch","openSearch","handleKeyDown","keyCode","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","ANIMATION_DURATION_200MS","placeholder","suppressContentEditableWarning","onKeyDown","onKeyUp","onPaste","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","force","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","onUpdateMessageSendAcknowledged","sendingState","old_message_id","sending_state","newMessageId","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","width","Pending","Sent","Succeeded","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","offset_order","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","dialog","hidden","isLastPinned","ApplicationStore","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","showGroupCall","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollBottom","max","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","remove","cacheKey","filesKey","contactsKey","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","useTestDC","parameters","STORAGE_CACHE_TEST_KEY","STORAGE_CACHE_KEY","STORAGE_CONTACTS_TEST_KEY","STORAGE_CONTACTS_KEY","STORAGE_FILES_TEST_KEY","STORAGE_FILES_KEY","filtersKey","STORAGE_FILTERS_TEST_KEY","STORAGE_FILTERS_KEY","registerKey","STORAGE_REGISTER_TEST_KEY","STORAGE_REGISTER_KEY","saveInternal","leading","trailing","promises","load","catch","Promise","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","openSupportChat","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","hiddenChats","delete","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","stub","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","shortTitle","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","selected","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","blur","concatSearchResults","arr","j","searchText","sessionId","savedMessages","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","SEARCH_GLOBAL_TEXT_MIN","globalPromises","globalPromise","latinTrimmedText","USERNAME_LENGTH_MIN","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","savedMessagesPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","KeyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","wrapperRef","searchRef","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","play","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","themeOptions","palette","disableEnforceFocus","aria-describedby","component","FormLabel","focused","RadioGroup","root","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","sendByCtrlEnterOption","SEND_BY_CTRL_ENTER_KEY","sendByCtrlEnter","Colorize","handleSetOption","inputProps","isMacOS","Language","languages","language_packs","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","AddParticipants","newArray","selectedItems","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","showArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","archiveTitle","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","diff","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","link","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","reply_to_message_id","input_message_text","disable_web_page_preview","clear_draft","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","input_message_content","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","stream","getAudioTracks","track","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","permissions","can_send_messages","SCALE_BIG","SCALE_SMALL","SCALE_BIG_MIN","SCALE_SMALL_MIN","FORM_BIG_MAX","FORM_SMALL_MAX","LIGHT_GRADIENT_SIZE","rotateZ","angle","originX","originY","X","Y","BlobDrawable","maxRadius","minRadius","cubicBezierK","N","L","tan","radius","radiusNext","angleNext","progress","speed","pointStart","pointEnd","generateBlob","angleDif","radDif","random","amplitude","speedScale","cX","cY","canvas","paint","getContext","ctx","beginPath","progressNext","r1","r2","angle1","angle2","l","mapPoints","moveTo","bezierCurveTo","closePath","points","result1","result2","LineBlobDrawable","bottom","pinnedTop","progressToPinned","lineTo","MUTE_BUTTON_STATE_UNMUTE","MUTE_BUTTON_STATE_MUTE","MUTE_BUTTON_STATE_CONNECTING","MUTE_BUTTON_STATE_MUTED_BY_ADMIN","WeavingState","stateId","shader","createGradient","fillStyle","getGradientFromType","dt","x0","y0","gradient","createLinearGradient","addColorStop","TopBar","handleDevicePixelRatioChanged","scale","devicePixelRatio","topBar","getElementById","handleResize","resizeHandler","resizing","resizeCanvas","invokeDraw","handleBlur","raf","mounted","lbd","lbd1","lbd2","currentState","previousState","progressToState","newTime","lastUpdateTime","animateToAmplitude","animateAmplitudeDiff","amplitude2","animateAmplitudeDiff2","top1","top2","clearRect","alpha","paint1","globalAlpha","setCurrentState","animated","states","matchMedia","setAmplitude","GroupCallTopPanel","onClientUpdateGroupCallAmplitudeChange","amplitudes","topBarRef","onUpdateGroupCallParticipant","group_call_id","participant","call","groupCallId","getCallStatus","connected","switchButtonState","onUpdateGroupCall","group_call","onClientUpdateGroupCall","onClientUpdateGroupCallConnectionState","CallStore","currentGroupCall","saveMessagesScrollPosition","restoreMessagesScrollPosition","handleMicrophone","groupCall","can_unmute_self","changeUserMuted","handleLeave","leaveGroupCall","handleOpenGroupCall","openGroupCallPanel","elements","getElementsByClassName","openPanel","offsetHeightDiff","Mic","MicOff","CallEnd","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","handleStartGroupCall","showAlert","startGroupCall","openReportChat","voice_chat_group_call_id","canClearHistory","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","manageVoiceChats","canManageVoiceChats","reported","canBeReported","Broom","Block","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","timingFunction","animateOnMount","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","canReport","PinnedMessageBorder","drawRect","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","currentMessageId","currentPrevMessageId","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","which","clickedPinned","handleMouseDown","handleEditClick","prevMessage","prevContent","prevPropsChatId","Header","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","handlePinClick","getConnectionState","showProgressAnimation","HeaderProgress","PlaylistEdit","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","handlePlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","rate","Time","onClientUpdateMediaTime","currentTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","HeaderPlayer","handleSeekForward","videoRef","handleSeek","PLAYER_SEEK_STEP_BIG","handleSeekBackward","handleSeekTo","seekTime","player","paused","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","getCurrentTime","playing","srcSource","pause","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","setCurrentTime","handleLoadedMetadata","hasVoice","muted","buffered","videoWidth","videoHeight","captureStream","mozCaptureStream","handleProgress","handleTimeUpdate","handleCanPlay","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","remote","unique_id","clearCurrentTime","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onPlay","onPause","onEnded","onTimeUpdate","onProgress","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","handleCopyLink","copyLink","handleCopyPublicMessageLink","for_album","for_comment","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canSendMessages","canBePinned","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","round","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","GroupCallJoinPanelSubtitle","participantCount","participant_count","participantsOnly","prevGroupCallId","GroupCallRecentParticipants","speakers","recent_speakers","updateSpeakers","PROFILE_PHOTO_PRELOAD_TIME_MS","lhs","rhs","is_speaking","speakersEquals","speaking","prevId","GroupCallJoinPanel","handleUpdateChatVoiceChat","handleUpdateGroupCall","handleClientUpdateGroupCall","isCurrent","is_joined","joinGroupCall","MessageContext","createContext","withMessage","MessageComponent","Consumer","handleCallbackQueryAnswer","via_bot_user_id","show_alert","showOpenGameAlert","is_verified","showOpenUrlAlert","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","onError","forward_text","skip_confirm","showRequestUrlAlert","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","reply_markup","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","handleMouseUp","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","ignoreUnread","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","ttl","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","inputMessageContent","forward","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","handleInViewport","elementRect","contentRect","getBoundingClientRect","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","ForwardTargetChat","ForwardDialog","getPublicMessageLink","getChatsPromise","publicMessageLink","getForwardPhotoSize","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchResults","globalSearchResults","chatsSource","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","OvershootInterpolator","tension","mTension","DecelerateInterpolator","factor","mFactor","pow","AccelerateInterpolator","mDoubleFactor","createRadialGradient","RadialProgressView","setUseSelfAlpha","useSelfAlpha","setAlpha","setNoProgress","noProgress","setProgress","currentProgress","animatedProgress","progressAnimationStart","progressTime","updateAnimation","radOffset","rotationTime","circle","circleProgress","currentProgressTime","risingTime","risingCircleLength","currentCircleLength","accelerateInterpolator","getInterpolation","decelerateInterpolator","old","progressDiff","setSize","setStrokeWidth","lineWidth","updateProgressPaint","setProgressColor","progressColor","toCircle","circleRect","translate","radStart","drawingCircleLength","radLength","arc","progressPaint","restore","isCircle","lineCap","strokeStyle","Button","switchProgress","tinyWaveDrawable","buttonDefaultRadius","buttonRadius","bigWaveDrawable","canSwitchProgress","radialProgressView","invalidateColors","lightingColor","fillColors","colorsTmp","oldLight","newLight","blendARGB","currentLightColor","radialGradient","showWaves","showLighting","showWavesProgress","showLightingProgress","showWavesProgressInterpolated","overshootInterpolator","resetTransform","paintTmp","scaleLight","drawCircle","updateMuteButton","muteButtonState","updateMuteButtonState","radialPaint","generateInitBlob","colorsToSet","color1","color2","c1","c2","inverseRatio","g","strToHex","justifyContent","cursor","GroupCallMicButtonHint","GroupCallMicButton","buttonRef","is_muted","GroupCallPanelButtons","GroupCallParticipant","handleOpenProfile","closeGroupCallPanel","handleSendMessage","handleUnmute","is_muted_for_all_users","is_muted_for_current_user","can_be_muted_for_all_users","can_be_unmuted_for_all_users","ListItemClasses","focusVisible","TouchRippleProps","child","rippleVisible","prevUserId","participants","GroupCallParticipants","participantsMap","updateParticipants","preloadContent","manageGroupCalls","AddMember","GroupCallMicAmplitude","audioContext","AudioContext","webkitAudioContext","addAnalyser","removeAnalyser","streamSource","createMediaStreamSource","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","connect","analyse","disconnect","frequencyBinCount","getByteFrequencyData","getAmplitude","bars","GroupCallSettings","openDeviceSelect","handleCloseDeviceSelect","muteNewParticipants","mute_new_participants","allowedChangeMuteNewParticipants","allowed_change_mute_new_participants","onDeviceChange","enumerateDevices","devices","outputDeviceId","getOutputDeviceId","deviceId","inputAudioDeviceId","getInputAudioDeviceId","inputAudio","inputVideoDeviceId","getInputVideoDeviceId","inputVideo","handleOutputChange","handleOpenDeviceSelect","handleSelectDevice","setOutputDeviceId","streamManager","inputAudioStream","getStream","exact","handleEnd","handleMuteNewParticipants","toggleMuteNewParticipants","setInputAudioDeviceId","outputDeviceInfo","outputString","inputAudioDeviceInfo","inputAudioString","canManage","Switch","switchBase","colorSecondary","muteSettings","GroupCallSettingsButton","Tune","GroupCallPanel","handleOpenSettings","GroupCall","onClientUpdateGroupCallFullScreen","fullscreen","mouseDownRoot","pageX","pageY","onmousemove","handleMouseMove","onmouseup","windowDragging","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","oldLeft","oldTop","normalizePosition","startLeft","startTop","fullScreen","setPosition","pipParams","documentElement","prevLeft","prevTop","checkGlue","playerWidth","playerHeight","documentWidth","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","videoInfo","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","thumb","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","oldUrl","scrollToHash","handleBack","instantViewerRef","articleRef","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","scrollIntoView","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","PipPlayer","onClientUpdateMediaShortcut","PLAYER_SEEK_STEP_SMALL","handleVolume","PLAYER_VOLUME_STEP","handleFullScreen","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","handleLoadedData","waiting","handlePause","handleVolumeChange","onVolumeChange","handleWaiting","startStopPlayer","handlePlayerMouseDown","pip","offsetX","offsetY","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","exitFullscreen","requestFullscreen","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","connectPlayer","disconnectPlayer","pipPlayer","onloadedmetadata","onloadeddata","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","method","mozRequestFullScreen","webkitRequestFullscreen","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onDoubleClick","onBlur","Hint","rail","onChangeCommitted","FullScreen","Progress","prevVideo","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateGroupCallPanel","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.8d3b51bc.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport { getFormattedText } from '../../Utils/Message';\nimport './AlertDialog.css';\n\nclass AlertDialog extends React.Component {\n\n    handleClose = result => {\n        const { onClose } = this.props;\n\n        onClose && onClose(result);\n    };\n\n    render() {\n        const { params, t } = this.props;\n        if (!params) return null;\n\n        let { title, message, ok, cancel } = params;\n\n        if (message['@type'] === 'formattedText') {\n            message = getFormattedText(message, t, {});\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    { cancel && (\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\n                            {cancel}\n                        </Button>\n                    )}\n                    { ok && (\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\n                            {ok}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nAlertDialog.propTypes = {\n    params: PropTypes.object\n};\n\nexport default withTranslation()(AlertDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './BlockSenderDialog.css';\n\nclass BlockSenderDialog extends React.Component {\n    state = {\n        reportSpam: true,\n        deleteChat: true\n    };\n\n    handleReportSpamChange = () => {\n        const { reportSpam } = this.state;\n\n        this.setState({\n            reportSpam: !reportSpam\n        });\n    };\n\n    handleDeleteChatChange = () => {\n        const { deleteChat } = this.state;\n\n        this.setState({\n            deleteChat: !deleteChat\n        });\n    };\n\n    render() {\n        const { sender, onClose, t } = this.props;\n        if (!sender) return null;\n\n        const { reportSpam, deleteChat } = this.state;\n\n        let title = null;\n        let text = null;\n        const entities = [];\n        let reportText = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                const { user_id } = sender;\n\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\n                text = getSimpleMarkupEntities(text, entities);\n                reportText = LStore.getString('BlockContact');\n                break;\n            }\n            case 'messageSenderChat': {\n                const { chat_id } = sender;\n\n                const location = getChatLocation(chat_id);\n                if (location) {\n                    title = LStore.getString('ReportUnrelatedGroup');\n                    if (location.address) {\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\n                        text = getSimpleMarkupEntities(text, entities);\n                    } else {\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\n                    }\n                } else {\n                    title = LStore.getString('ReportSpamTitle');\n                    if (isChannelChat(chat_id)) {\n                        text = LStore.getString('ReportSpamAlertChannel');\n                    } else {\n                        text = LStore.getString('ReportSpamAlertGroup');\n                    }\n                }\n                reportText = LStore.getString('ReportChat');\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\n                    </DialogContentText>\n                    { sender['@type'] === 'messageSenderUser' && (\n                        <div className='block-sender-params'>\n                            <FormControlLabel\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\n                                label={t('DeleteReportSpam')}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\n                                label={t('DeleteThisChat')}\n                            />\n                        </div>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\n                        {reportText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nBlockSenderDialog.propTypes = {\n    sender: PropTypes.object\n};\n\nexport default withTranslation()(BlockSenderDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './InputPasswordDialog.css';\n\nclass InputPasswordDialog extends React.Component {\n\n    state = { };\n\n    handleChange = e => {\n        this.password = e.target.value;\n    };\n\n    handleClickShowPassword = () => {\n        const { showPassword } = this.state;\n\n        this.setState({ showPassword: !showPassword });\n    };\n\n    getErrorMessage = error => {\n        const { t } = this.props;\n\n        if (!error) return null;\n\n        if (error.message === 'PASSWORD_HASH_INVALID') {\n            return t('InvalidPassword');\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\n            const str = error.message.replace('Too Many Requests: retry after ', '');\n            try {\n                const time = parseInt(str);\n                const timeString = time < 60\n                    ? LStore.formatPluralString('Seconds', time)\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\n\n                return LStore.formatString('FloodWaitTime', timeString);\n            } catch (e) {\n                return error.message;\n            }\n        }\n\n        return error.message;\n    }\n\n    render() {\n        const { state, error, onClose, t } = this.props;\n        if (!state) return null;\n\n        const { showPassword, loading } = this.state;\n        const { password_hint: passwordHint } = state;\n\n        const errorMessage = this.getErrorMessage(error);\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('PleaseEnterCurrentPasswordTransfer')}\n                    </DialogContentText>\n                    <FormControl className='auth-input' fullWidth>\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\n                        <Input\n                            fullWidth\n                            autoFocus\n                            autoComplete='off'\n                            id='adornment-password'\n                            type={showPassword ? 'text' : 'password'}\n                            disabled={loading}\n                            error={Boolean(error)}\n                            onChange={this.handleChange}\n                            endAdornment={\n                                <InputAdornment position='end'>\n                                    <IconButton\n                                        aria-label='Toggle password visibility'\n                                        onClick={this.handleClickShowPassword}\n                                        edge='end'>\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                        />\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nInputPasswordDialog.propTypes = {\n    state: PropTypes.object,\n    error: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(InputPasswordDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './LeaveVoiceChatDialog.css';\n\nclass LeaveVoiceChatDialog extends React.Component {\n    state = {\n        discard: false\n    };\n\n    handleDiscardChange = () => {\n        const { discard } = this.state;\n\n        this.setState({\n            discard: !discard\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { discard } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {LStore.getString('VoipGroupLeaveAlertTitle')}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.getString('VoipGroupLeaveAlertText')}\n                    </DialogContentText>\n                    <FormControlLabel\n                        control={<Checkbox checked={discard} onChange={this.handleDiscardChange} color='primary' />}\n                        label={t('VoipGroupEndChat')}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, { discard })} color='secondary'>\n                        {t('VoipGroupLeave')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nLeaveVoiceChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveVoiceChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getUserFullName } from '../../Utils/User';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenGameDialog.css';\n\nclass OpenGameDialog extends React.Component {\n    render() {\n        const { game, params, onClose, t } = this.props;\n        if (!game) return null;\n\n        const { userId } = params;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenGameDialog.propTypes = {\n    game: PropTypes.object,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenGameDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenUrlDialog.css';\n\nclass OpenUrlDialog extends React.Component {\n    render() {\n        const { url, onClose, t } = this.props;\n        if (!url) return null;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { modalManager } from '../../Utils/Modal';\nimport './ReportChatDialog.css';\n\nclass ReportChatDialog extends React.Component {\n\n    handleReport = type => {\n        const { onClose } = this.props;\n\n        onClose && onClose(true, { '@type': type });\n    }\n\n    render() {\n        const { onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('ReportChat')}</DialogTitle>\n                <div className='report-chat-dialog-content'>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonSpam')}>\n                        <ListItemText primary={t('ReportChatSpam')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonFake')}>\n                        <ListItemText primary={t('ReportChatFakeAccount')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonViolence')}>\n                        <ListItemText primary={t('ReportChatViolence')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonPornography')}>\n                        <ListItemText primary={t('ReportChatPornography')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonChildAbuse')}>\n                        <ListItemText primary={t('ReportChatChild')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonCustom')}>\n                        <ListItemText primary={t('ReportChatOther')}/>\n                    </ListItem>\n                </div>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('ReportChat')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nReportChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ReportChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './RequestUrlDialog.css';\n\nclass RequestUrlDialog extends React.Component {\n    state = {\n        value1: true,\n        value2: true\n    };\n\n    handleValue1Change = () => {\n        const { value1 } = this.state;\n\n        this.setState({ value1: !value1 });\n    };\n\n    handleValue2Change = () => {\n        const { value2 } = this.state;\n\n        this.setState({ value2: !value2 });\n    };\n\n    render() {\n        const { url, params, onClose, t } = this.props;\n        if (!url) return null;\n\n        const { value1, value2 } = this.state;\n\n        const { result } = params;\n        if (!result) return null;\n\n        const { domain, bot_user_id, request_write_access } = result;\n\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\n        const entities1 = [];\n        text1 = getSimpleMarkupEntities(text1, entities1);\n        const option1 = (\n            <FormControlLabel\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\n            />\n        );\n\n        let option2 = null;\n        if (request_write_access) {\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\n            const entities2 = [];\n            text2 = getSimpleMarkupEntities(text2, entities2);\n            option2 = (\n                <FormControlLabel\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\n                />\n            );\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                    {option1}\n                    {option2}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRequestUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(RequestUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlertDialog from './Popup/AlertDialog';\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport LeaveVoiceChatDialog from './Popup/LeaveVoiceChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport OpenGameDialog from './Popup/OpenGameDialog';\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport ReportChatDialog from './Popup/ReportChatDialog';\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { clearSelection, closePinned, showSnackbar } from '../Actions/Client';\nimport { openGameInBrowser } from '../Utils/Game';\nimport { reportChat } from '../Actions/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport CloseIcon from '../Assets/Icons/Close';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null,\n        alert: null,\n        openUrlAlert: null,\n        openGameAlert: null,\n        requestUrlAlert: null,\n        inputPasswordAlert: null,\n        requestBlockSenderAlert: null,\n        leaveVoiceChatAlert: null,\n        reportChatAlert: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.on('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.on('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.off('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.off('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    onClientUpdateReportChat = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({ reportChatAlert: { chatId, messageIds }});\n    };\n\n    onClientUpdateBlockSender = update => {\n        const { sender } = update;\n\n        this.setState({ requestBlockSenderAlert: { sender }});\n    }\n\n    onClientUpdateInputPasswordAlert = update => {\n        const { state, onPassword } = update;\n\n        this.setState({ inputPasswordAlert: { state, onPassword } });\n    }\n\n    onClientUpdateLeaveVoiceChatAlert = update => {\n        const { params } = update;\n\n        this.setState({ leaveVoiceChatAlert: { params }});\n    }\n\n    onClientUpdateOpenGameAlert = update => {\n        const { game, params } = update;\n\n        if (params && params.isVerified) {\n            this.openGameAlert = { game, params };\n            this.handleOpenGameContinue(null, true);\n        } else {\n            this.setState({ openGameAlert: { game, params } });\n        }\n    }\n\n    onClientUpdateOpenUrlAlert = update => {\n        const { url, params } = update;\n\n        if (params && !params.ask) {\n            this.openUrlAlert = { url, params };\n            this.handleOpenUrlContinue(null, true);\n        } else {\n            this.setState({ openUrlAlert: { url, params } });\n        }\n    };\n\n    onClientUpdateRequestUrlAlert = update => {\n        const { url, params } = update;\n\n        this.setState({ requestUrlAlert: { url, params } });\n    }\n\n    onClientUpdateSnackbar = update => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n        const { message, action } = update;\n\n        enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: action(closeSnackbar)\n        });\n    };\n\n    onClientUpdateAlert = update => {\n        const { params } = update;\n\n        this.setState({ alert: { params } });\n    };\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = async (result, undo = true) => {\n        const { leaveChat } = this.state || this;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.leaveChat = null;\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        if (undo) {\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n        } else {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n\n            }\n        }\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                closeSnackbar(snackKey);\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            closeSnackbar(snackKey);\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            AppStore.removeScheduledAction(key);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        AppStore.removeScheduledAction(key);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    handleAlertContinue = result => {\n        const { alert } = this.state;\n        if (!alert) return;\n\n        const { params } = alert;\n        this.setState({ alert: null });\n\n        const { onResult } = params;\n        onResult && onResult(result);\n    };\n\n    handleOpenUrlContinue = (event, result) => {\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\n\n        this.setState({ openUrlAlert: null });\n        this.openUrlAlert = null;\n\n        if (!result) return;\n\n        const { url, onClick } = openUrlAlert;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            event && event.preventDefault();\n\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    handleOpenGameContinue = (event, result) => {\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\n\n        this.setState({ openGameAlert: null });\n        this.openGameAlert = null;\n\n        if (!result) return;\n\n        const { game, params } = openGameAlert;\n        if (!game) return;\n        if (!params) return;\n\n        const { url, message } = params;\n        if (!url) return;\n        if (!message) return;\n\n        openGameInBrowser(url, message);\n    };\n\n    handleRequestUrlContinue = async (event, open, values) => {\n        const { requestUrlAlert } = this.state;\n        this.setState({ requestUrlAlert: null });\n\n        if (!open) return;\n\n        const { params } = requestUrlAlert;\n        if (!params) return;\n\n        const { result, chatId, messageId, buttonId } = params;\n        if (!result) return;\n\n        if (!values.value1) {\n            this.openUrlAlert = { url: result.url };\n            this.handleOpenUrlContinue(event, open);\n        } else {\n            const httpUrl = await TdLibController.send({\n                '@type': 'getLoginUrl',\n                chat_id: chatId,\n                message_id: messageId,\n                button_id: buttonId,\n                allow_write_access: result.request_write_access && values.value2\n            });\n\n            this.openUrlAlert = { url: httpUrl.url };\n            this.handleOpenUrlContinue(event, open);\n        }\n    };\n\n    handleInputPasswordContinue = (result, password) => {\n        const { inputPasswordAlert } = this.state;\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\n\n        if (!result) {\n            onCloseDialog();\n            return;\n        }\n\n        const { onPassword } = inputPasswordAlert;\n        onPassword && onPassword(password, onCloseDialog, onError);\n    };\n\n    handleBlockSenderContinue = async (result, params) => {\n        const { requestBlockSenderAlert } = this.state;\n\n        this.setState({ requestBlockSenderAlert: null });\n\n        if (!result) {\n            return;\n        }\n\n        const { sender } = requestBlockSenderAlert;\n        if (!sender) return;\n\n        let chatId = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                blockSender(sender);\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\n                break;\n            }\n            case 'messageSenderChat': {\n                chatId = sender.chat_id;\n                break;\n            }\n        }\n\n        if (!params || params.reportSpam) {\n            const reason = getChatLocation(chatId)\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\n                : { '@type': 'chatReportReasonSpam' };\n\n            reportChat(chatId, reason);\n        }\n\n        if (!params || params.deleteChat) {\n            const deleteChat = canDeleteChat(chatId);\n            if (!deleteChat) return;\n\n            this.leaveChat = { chatId };\n            this.handleLeaveContinue(true, false);\n        }\n    };\n\n    handleLeaveVoiceChatContinue = (result, resultParams) => {\n        const { leaveVoiceChatAlert } = this.state;\n\n        this.setState({ leaveVoiceChatAlert: null });\n\n        const { params } = leaveVoiceChatAlert;\n        if (!params) return;\n\n        const { onResult } = params;\n\n        onResult && onResult(resultParams);\n    };\n\n    handleReportChatContinue = (result, params) => {\n        const { t } = this.props;\n        const { reportChatAlert } = this.state;\n\n        this.setState({ reportChatAlert: null });\n        if (!result) return;\n\n        const { chatId, messageIds } = reportChatAlert;\n\n        showSnackbar(t('ReportChatSent'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    render() {\n        const {\n            leaveChat,\n            clearHistory,\n            deleteMessages,\n            pinMessage,\n            unpinMessage,\n            alert,\n            openUrlAlert,\n            openGameAlert,\n            requestUrlAlert,\n            inputPasswordAlert,\n            requestBlockSenderAlert,\n            leaveVoiceChatAlert,\n            reportChatAlert\n        } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        } else if (alert) {\n            const { params } = alert;\n\n            return (\n                <AlertDialog\n                    params={params}\n                    onClose={this.handleAlertContinue} />\n            );\n        } else if (openUrlAlert) {\n            const { url, params } = openUrlAlert;\n\n            return (\n                <OpenUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleOpenUrlContinue}/>\n            );\n        } else if (openGameAlert) {\n            const { game, params } = openGameAlert;\n\n            return (\n                <OpenGameDialog\n                    game={game}\n                    params={params}\n                    onClose={this.handleOpenGameContinue}/>\n            );\n        } else if (requestUrlAlert) {\n            const { url, params } = requestUrlAlert;\n\n            return (\n                <RequestUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleRequestUrlContinue}/>\n            );\n        } else if (inputPasswordAlert) {\n            const { state, error } = inputPasswordAlert;\n\n            return (\n                <InputPasswordDialog\n                    state={state}\n                    error={error}\n                    onClose={this.handleInputPasswordContinue}/>\n            );\n        } else if (requestBlockSenderAlert) {\n            const { sender } = requestBlockSenderAlert;\n\n            return (\n                <BlockSenderDialog\n                    sender={sender}\n                    onClose={this.handleBlockSenderContinue}/>\n            );\n        } else if (leaveVoiceChatAlert) {\n            const { params } = leaveVoiceChatAlert;\n\n            return (\n                <LeaveVoiceChatDialog\n                    params={params}\n                    onClose={this.handleLeaveVoiceChatContinue}/>\n            );\n        } else if (reportChatAlert) {\n            const { chatId, messageIds } = reportChatAlert;\n\n            return (\n                <ReportChatDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleReportChatContinue}/>\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function openGameInBrowser(url, message) {\n    let sharedPreferences = {};\n    try {\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\n    } catch (e) { }\n\n    const existing = sharedPreferences['' + message.id];\n    let hash = existing ? existing : ''\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\n    if (!existing) {\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const array = new Uint8Array(1);\n        for (let i = 0; i < 20; i++) {\n            window.crypto.getRandomValues(array)\n            hash += chars[array[0] % chars.length];\n        }\n\n        sharedPreferences['' + message.id] = hash;\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\n    }\n    addHash += hash;\n    const index = url.indexOf('#');\n    if (index < 0) {\n        url += '#' + addHash;\n    } else {\n        const curHash = url.substring(0, index + 1);\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\n            url += '&' + addHash;\n        } else {\n            if (curHash.length > 0) {\n                url += '?' + addHash;\n            } else {\n                url += addHash;\n            }\n        }\n    }\n\n    const newWindow = window.open();\n    newWindow.opener = null;\n    newWindow.location = url;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {isPrivateChat(chatId) && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {phoneNumber ? formatPhoneNumber(phoneNumber) : t('PhoneHidden')}\n                                                </Typography>\n                                            }\n                                            secondary={t('Phone')}\n                                        />\n                                    </ListItem>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender } = last_message;\n        if (sender.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    onUpdateMessageSendAcknowledged = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.setState({ sendingState: null });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === 0) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 50);\n    setTimeout(() => {\n        element.scrollTo({ top: 0, behavior });\n    }, 1);\n}\n\nexport function scrollBottom(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === element.scrollHeight - element.offsetHeight) return;\n\n    element.scrollTop = Math.max(element.scrollTop, element.scrollHeight - element.offsetHeight - 50);\n    setTimeout(() => {\n        element.scrollTo({ top: element.scrollHeight - element.offsetHeight, behavior });\n    }, 1);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport {\n    STORAGE_CACHE_KEY,\n    STORAGE_CACHE_TEST_KEY,\n    STORAGE_CONTACTS_KEY,\n    STORAGE_CONTACTS_TEST_KEY,\n    STORAGE_FILES_KEY,\n    STORAGE_FILES_TEST_KEY,\n    STORAGE_FILTERS_KEY,\n    STORAGE_FILTERS_TEST_KEY, STORAGE_REGISTER_KEY, STORAGE_REGISTER_TEST_KEY\n} from '../Constants';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        const { useTestDC } = TdLibController.parameters;\n        this.cacheKey = useTestDC ? STORAGE_CACHE_TEST_KEY : STORAGE_CACHE_KEY;\n        this.contactsKey = useTestDC ? STORAGE_CONTACTS_TEST_KEY : STORAGE_CONTACTS_KEY;\n        this.filesKey = useTestDC ? STORAGE_FILES_TEST_KEY : STORAGE_FILES_KEY;\n        this.filtersKey = useTestDC ? STORAGE_FILTERS_TEST_KEY : STORAGE_FILTERS_KEY;\n        this.registerKey = useTestDC ? STORAGE_REGISTER_TEST_KEY : STORAGE_REGISTER_KEY;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000, {\n            leading: false,\n            trailing: true\n        });\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove(this.cacheKey);\n                        CacheManager.remove(this.filesKey);\n                        if (this.cacheContacts) {\n                            CacheManager.remove(this.contactsKey);\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        const promises = [];\n        promises.push(CacheManager.load(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.load(this.filesKey).catch(error => null));\n        promises.push(CacheManager.load(this.filtersKey).catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load(this.contactsKey).catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n        // console.log('[f] cache.load', files);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[f] cache.parse', cache.files);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender } = last_message;\n                switch (sender['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        // console.log('[cm] save');\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal');\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save(this.cacheKey, cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        const results = await Promise.all(promises);\n        await CacheManager.save(this.filesKey, results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save(this.contactsKey, contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save(this.filtersKey, this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filesKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filtersKey).catch(error => null));\n        promises.push(CacheManager.remove(this.contactsKey).catch(error => null));\n        promises.push(CacheManager.remove(this.registerKey).catch(error => null));\n\n        Promise.all(promises);\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport { openSupportChat } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n\n        openSupportChat();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div className='search-input-wrapper'>\n                    {showIcon && <SearchIcon className='search-input-icon' />}\n                    <div\n                        id='search-inputbox'\n                        ref={inputRef}\n                        placeholder={hint || t('Search')}\n                        contentEditable\n                        suppressContentEditableWarning\n                        onKeyDown={this.handleKeyDown}\n                        onKeyUp={this.handleKeyUp}\n                        onPaste={this.handlePaste}\n                        onInput={this.handleInput}\n                        onFocus={onFocus}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport { openChatList } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListMain' });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        if (chatListEquals(this.state.chatList, chatList)) {\n            this.scrollToTop();\n        } else {\n            this.setState({\n                chatList,\n                params: {\n                    loading: false,\n                    completed: false\n                }\n            }, () => {\n                this.loadFirstSlice();\n            });\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        // console.log('[vl] reorderChats', orderedChatIds);\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        if (this.stub) return;\n\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const list = current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        let offsetChat = null;\n        if (!replace && chats && chats.length > 0) {\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\n            if (offsetChat) {\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\n                offsetChatId = offsetChat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source, stub = false) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        if (stub) {\n            return <DialogPlaceholder key={index} index={index} />\n        }\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        this.source = [];\n        this.stub = false;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                this.source = Array.from(Array(10));\n                this.stub = true;\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source, this.stub)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    cacheItems: PropTypes.array,\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    handleClick = () => {\n        const { innerListRef } = this.props;\n        if (!innerListRef) return;\n\n        const { current: list } = innerListRef;\n        if (!list) return;\n\n        list.scrollToTop();\n    };\n\n    render() {\n        const { t, innerListRef, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender.user_id && chatSearch ? (\n                <UserTile userId={sender.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, SEARCH_GLOBAL_TEXT_MIN, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= SEARCH_GLOBAL_TEXT_MIN) {\n                trimmedText = trimmedText.length === SEARCH_GLOBAL_TEXT_MIN ? trimmedText + '.' : trimmedText;\n\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current.cropper;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputChatPhotoStatic', photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data } }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\nimport { scrollBottom } from '../../../Utils/DOM';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput wrapperRef={this.searchRef} inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\n        try {\n            const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\n            type = themeOptions.type;\n            primary = themeOptions.primary;\n        } catch {}\n\n        this.state = {\n            open: false,\n            type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        const type = event.target.value;\n\n        this.setState({ type });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                disableEnforceFocus={true}\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Theme')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='default' control={<Radio color='primary' />} label='System Default' />\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { isMacOS } from '../../../Utils/Common';\nimport { SEND_BY_CTRL_ENTER_KEY } from '../../../Constants';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const sendByCtrlEnterOption = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false,\n            sendByCtrlEnter: Boolean(sendByCtrlEnterOption && sendByCtrlEnterOption.value)\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    async handleSetOption(command) {\n        let value = false;\n        switch (command) {\n            case 'sendByCtrlEnter': {\n                value = true;\n                break;\n            }\n            case 'sendByEnter': {\n                value = false;\n                break;\n            }\n        }\n\n        await TdLibController.send({\n            '@type': 'setOption',\n            name: SEND_BY_CTRL_ENTER_KEY,\n            value: { '@type': 'optionValueBoolean', value }\n        });\n\n        this.setState({\n            sendByCtrlEnter: value\n        });\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground, sendByCtrlEnter } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Theme')} />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('Keyboard')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={!sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('SendByEnter')}\n                                secondary={t('NewLineByShiftEnter')}\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByCtrlEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={isMacOS() ? t('SendByCommandEnter') : t('SendByControlEnter')}\n                                secondary={t('NewLineByEnter')}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions, t } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport { unblockSender } from '../../../Actions/Message';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile || defaultPhoto) {\n            const photo = defaultPhotoFile\n                ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputChatPhotoStatic', photo }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\nimport { scrollBottom } from '../../Utils/DOM';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile || defaultPhoto) {\n                const photo = defaultPhotoFile\n                     ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                     : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputChatPhotoStatic', photo }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache && cache.chats ? cache.chats : null;\n        const archiveCacheItems = cache && cache.archiveChats ? cache.archiveChats : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        {/*<UpdatePanel />*/}\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\nimport { PHOTO_SIZE, SEND_BY_CTRL_ENTER_KEY, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n    };\n\n    onClientUpdateSendText = update => {\n        const { text } = update;\n\n        if (!text) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = text;\n        focusInput(element);\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const { chatSelectOptions } = AppStore;\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\n            return;\n        }\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                const sendByCtrlEnter = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n                if (sendByCtrlEnter && sendByCtrlEnter.value) {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && !ctrlKey && !metaKey && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter+cmd, enter+ctrl\n                    else if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                } else {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter\n                    else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n\n        // const { text, position } = this.getTextAndCaretPosition();\n        // this.searchUsernameOrHashtag(text, position, [], false);\n    };\n\n    getTextAndCaretPosition = () => {\n        const { current: input } = this.newMessageRef;\n        if (!input) return;\n\n        input.focus()\n        let _range = document.getSelection().getRangeAt(0);\n        let range = _range.cloneRange();\n        range.selectNodeContents(input);\n        range.setEnd(_range.endContainer, _range.endOffset);\n\n        return { text: input.innerText, position: range.toString().length };\n    };\n\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\n        const { chatId } = this.state;\n\n        const searchResultUsernames = [];\n\n        if (this.cancelDelayRunnable) {\n            clearTimeout(this.cancelDelayRunnable);\n            this.cancelDelayRunnable = null;\n        }\n\n        const info = getChatFullInfo(chatId);\n        const needUsernames = true;\n        const needBotContext = true;\n\n        const now = Date.now();\n        this.now = now;\n\n        let searchPosition = position;\n        if (text.length > 0) {\n            searchPosition--;\n        }\n\n        this.lastText = text;\n        this.lastUsernameOnly = usernameOnly;\n\n        let foundType = -1;\n        let result = '';\n        let resultStartPosition;\n        let resultLength;\n\n        let dogPosition = -1;\n        if (usernameOnly) {\n            result += text.substring(1);\n            resultStartPosition = 0;\n            resultLength = result.length;\n            foundType = 0;\n        } else {\n            for (let i = searchPosition; i >= 0; i--) {\n                if (i >= text.length){\n                    continue;\n                }\n                let ch = text[i];\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\n                    if (ch === '@') {\n                        if (needUsernames || needBotContext && i === 0){\n                            if (!info && i !== 0) {\n                                this.lastText = text;\n                                this.lastPosition = position;\n                                this.messages = messages;\n                                this.closeHints(now);\n                                return;\n                            }\n                            dogPosition = i;\n                            foundType = 0;\n                            resultStartPosition = i;\n                            resultLength = result.length + 1;\n                        }\n                    }\n                }\n\n                result = ch + result;\n            }\n        }\n\n        if (foundType === -1) {\n            this.closeHints(now);\n            return;\n        }\n\n        if (foundType === 0) {\n            const users = [];\n            const usersMap = new Map();\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\n                const { sender } = messages[i];\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\n                    usersMap.set(sender.user_id, sender.user_id);\n                    users.push(sender.user_id);\n                }\n            }\n\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\n            const hasSpace = usernameString.indexOf(' ') >= 0;\n            const newResult = [];\n            const newResultsMap = new Map();\n            const newMap = new Map();\n\n            const inlineBots = [];\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\n\n            }\n\n            const chat = ChatStore.get(chatId);\n            if (chat && info && info.members) {\n                for (let i = -1; i < info.members.length; i++) {\n                    let username;\n                    let firstName;\n                    let lastName;\n                    let object;\n                    let id;\n                    if (i === -1) {\n                        if (!usernameString.length) {\n                            newResult.push(chat);\n                            continue;\n                        }\n                        firstName = chat.title;\n                        lastName = '';\n                        username = chat.username;\n                        object = chat;\n                        id = -chat.id;\n                    } else {\n                        const { user_id } = info.members[i];\n                        const user = UserStore.get(user_id);\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\n                            continue;\n                        }\n                        if (!usernameString.length) {\n                            if (!isDeletedUser(user_id)) {\n                                newResult.push(user);\n                                continue;\n                            }\n                        }\n                        firstName = user.first_name;\n                        lastName = user.last_name;\n                        username = user.username;\n                        object = user;\n                        id = user.id;\n                    }\n\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\n                        newResult.push(object);\n                        newMap.set(id, object);\n                    }\n                }\n            }\n\n            if (isSupergroup(chatId) && usernameString.length > 0) {\n                if (newResult.length < 5) {\n                    this.cancelDelayRunnable = setTimeout(() => {\n                        this.cancelDelayRunnable = null;\n                        this.showUsersResult(now, newResult, newMap, true);\n                    }, 0);\n                } else {\n                    this.showUsersResult(now, newResult, newMap, true);\n                }\n\n                setTimeout(async () => {\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const result = await TdLibController.send({\n                        '@type': 'searchChatMembers',\n                        chat_id: chatId,\n                        query: usernameString,\n                        limit: 20,\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\n                    });\n\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const { members } = result;\n                    if (members.length > 0) {\n                        for (let i = 0; i < members.length; i++) {\n                            const { user_id } = members[i];\n                            if (isMeUser(user_id)) {\n                                continue;\n                            }\n                            const user = UserStore.get(user_id);\n                            if (!user) {\n                                continue;\n                            }\n\n                            searchResultUsernames.push(user);\n                        }\n\n                        this.notifyDataSetChanged(now, searchResultUsernames);\n                    }\n\n\n                }, 200);\n            } else {\n                this.showUsersResult(now, newResult, newMap, true);\n            }\n        }\n    }\n\n    notifyDataSetChanged(id, searchResultUsernames) {\n        console.log('[search] global', searchResultUsernames);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsGlobal',\n            id,\n            global: searchResultUsernames\n        });\n    }\n\n    showUsersResult(id, newResult, newMap, notify) {\n        console.log('[search] local', newResult);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsLocal',\n            id,\n            local: newResult\n        });\n    }\n\n    closeHints(id) {\n        console.log('[search] close');\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsClose',\n            id\n        });\n    }\n\n    openHints() {\n\n    }\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const { is_blocked, last_message } = chat;\n\n                return {\n                    prevChatId: chatId,\n\n                    isBlocked: is_blocked,\n                    hasLastMessage: Boolean(last_message)\n                };\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId, options } = this.props;\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.options !== options) {\n            return true;\n        }\n\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.hasLastMessage !== hasLastMessage) {\n            return true;\n        }\n\n        if (nextState.isBlocked !== isBlocked) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        this.setState({\n            clearHistory: update.inProgress\n        });\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chat_id, last_message } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            hasLastMessage: Boolean(last_message)\n        });\n    };\n\n    onUpdateChatIsBlocked = update => {\n        const { chat_id, is_blocked } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            isBlocked: is_blocked\n        });\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    handleUnblock = () => {\n        const { chatId } = this.props;\n\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\n    };\n\n    handleStartBot = async () => {\n        const { chatId, options } = this.props;\n\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n        if (options && options.botStartMessage) {\n            const { botUserId, parameter } = options.botStartMessage;\n\n            await sendBotStartMessage(chatId, botUserId, parameter);\n        } else {\n            await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: 0,\n                input_message_content: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: '/start',\n                        entities: []\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: true\n                }\n            });\n        }\n    };\n\n    render() {\n        const { chatId, options, t } = this.props;\n        const { hasLastMessage, clearHistory } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type, is_blocked } = chat;\n        if (!type) return null;\n\n        if (is_blocked) {\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\n        }\n\n        if (options && options.botStartMessage) {\n            const isBot = isBotChat(chatId);\n            if (isBot) {\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n            }\n        }\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypeSecret':\n            case 'chatTypePrivate': {\n                const isBot = isBotChat(chatId);\n                if (isBot && (!hasLastMessage || clearHistory)) {\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n                }\n\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,9C10.4,9 8.85,9.25 7.4,9.72V12.82C7.4,13.22 7.17,13.56 6.84,13.72C5.86,14.21 4.97,14.84 4.17,15.57C4,15.75 3.75,15.86 3.5,15.86C3.2,15.86 2.95,15.74 2.77,15.56L0.29,13.08C0.11,12.9 0,12.65 0,12.38C0,12.1 0.11,11.85 0.29,11.67C3.34,8.77 7.46,7 12,7C16.54,7 20.66,8.77 23.71,11.67C23.89,11.85 24,12.1 24,12.38C24,12.65 23.89,12.9 23.71,13.08L21.23,15.56C21.05,15.74 20.8,15.86 20.5,15.86C20.25,15.86 20,15.75 19.82,15.57C19.03,14.84 18.14,14.21 17.16,13.72C16.83,13.56 16.6,13.22 16.6,12.82V9.72C15.15,9.25 13.6,9 12,9Z' />,\n    'CallEnd'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z' />,\n    'Mic'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,11C19,12.19 18.66,13.3 18.1,14.28L16.87,13.05C17.14,12.43 17.3,11.74 17.3,11H19M15,11.16L9,5.18V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V11L15,11.16M4.27,3L21,19.73L19.73,21L15.54,16.81C14.77,17.27 13.91,17.58 13,17.72V21H11V17.72C7.72,17.23 5,14.41 5,11H6.7C6.7,14 9.24,16.1 12,16.1C12.81,16.1 13.6,15.91 14.31,15.58L12.65,13.92L12,14A3,3 0 0,1 9,11V10.28L3,4.27L4.27,3Z' />,\n    'MicOff'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const MAX_SPEED = 8.2;\nexport const MIN_SPEED = 0.8;\nexport const AMPLITUDE_SPEED = 0.33;\n\nexport const SCALE_BIG = 0.807;\nexport const SCALE_SMALL = 0.704;\n\nexport const SCALE_BIG_MIN = 0.878;\nexport const SCALE_SMALL_MIN = 0.926;\n\nexport const FORM_BIG_MAX = 0.6;\nexport const FORM_SMALL_MAX = 0.6;\n\nexport const GLOBAL_SCALE = 1;\n\nexport const FORM_BUTTON_MAX = 0;\n\nexport const GRADIENT_SPEED_MIN = 0.5;\nexport const GRADIENT_SPEED_MAX = 0.01;\n\nexport const LIGHT_GRADIENT_SIZE = 0.5;\n\nfunction rotateZ(x, y, angle, originX, originY) {\n    x -= originX;\n    y -= originY;\n\n    let X = x * Math.cos(angle) - y * Math.sin(angle);\n    let Y = y * Math.cos(angle) + x * Math.sin(angle);\n\n    x = X + originX;\n    y = Y + originY;\n\n    return [x, y];\n}\n\nexport default class BlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.cubicBezierK = 1.0;\n        this.N = n;\n        this.L = (4.0 / 3.0) * Math.tan(Math.PI / (2 * this.N));\n        this.radius = new Array(n);\n        this.angle = new Array(n);\n\n        this.radiusNext = new Array(n);\n        this.angleNext = new Array(n);\n        this.progress = new Array(n);\n        this.speed = new Array(n);\n\n        this.pointStart = new Array(4);\n        this.pointEnd = new Array(4);\n\n        for (let i = 0; i < this.N; i++) {\n            this.generateBlob(this.radius, this.angle, i);\n            this.generateBlob(this.radiusNext, this.angleNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, angle, i) {\n        const { maxRadius, minRadius, speed, N } = this;\n\n        const angleDif = 2 * Math.PI / N * 0.05;\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        angle[i] = 2 * Math.PI / N * i + Math.random() * angleDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext, angle, angleNext } = this;\n        for (let i = 0; i < N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                angle[i] = angleNext[i];\n                this.generateBlob(radiusNext, angleNext, i);\n            }\n        }\n    }\n\n    draw(cX, cY, canvas, paint) {\n        // console.log('[bd] draw', cX, cY, canvas, paint);\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n\n            const { radius, radiusNext, angle, angleNext, N, L, cubicBezierK, pointStart, pointEnd } = this;\n\n            for (let i = 0; i < N; i++) {\n                const progress = this.progress[i];\n                const nextIndex = i + 1 < N ? i + 1 : 0;\n                const progressNext = this.progress[nextIndex];\n                const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                const r2 = radius[nextIndex] * (1.0 - progressNext) + radiusNext[nextIndex] * progressNext;\n                const angle1 = angle[i] * (1.0 - progress) + angleNext[i] * progress;\n                const angle2 = angle[nextIndex] * (1.0 - progressNext) + angleNext[nextIndex] * progressNext;\n                const l = L * (Math.min(r1, r2) + (Math.max(r1, r2) - Math.min(r1, r2)) / 2) * cubicBezierK;\n\n                pointStart[0] = cX;\n                pointStart[1] = cY - r1;\n                pointStart[2] = cX + l;\n                pointStart[3] = cY - r1;\n\n                this.mapPoints(pointStart, cX, cY, angle1);\n\n                pointEnd[0] = cX;\n                pointEnd[1] = cY - r2;\n                pointEnd[2] = cX - l;\n                pointEnd[3] = cY - r2;\n\n                this.mapPoints(pointEnd, cX, cY, angle2);\n\n                if (i === 0) {\n                    // console.log('[bd] moveTo', pointStart[0], pointStart[1]);\n                    ctx.moveTo(pointStart[0], pointStart[1]);\n                }\n                // console.log('[bd] bezierCurveTo', pointEnd[0], pointEnd[1]);\n                ctx.bezierCurveTo(\n                    pointStart[2], pointStart[3],\n                    pointEnd[2], pointEnd[3],\n                    pointEnd[0], pointEnd[1]\n                );\n            }\n\n            // ctx.scale(1.0, 1.0);\n            // this.fillStyleFunc(ctx);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n\n    mapPoints(points, cX, cY, angle) {\n        const result1 = rotateZ(points[0], points[1], angle, cX, cY);\n        const result2 = rotateZ(points[2], points[3], angle, cX, cY);\n\n        points[0] = result1[0];\n        points[1] = result1[1];\n        points[2] = result2[0];\n        points[3] = result2[1];\n    }\n\n    generateInitBlob() {\n        const { radius, radiusNext, angle, angleNext, progress, N } = this;\n\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, angle, i);\n            this.generateBlob(radiusNext, angleNext, i);\n            progress[i] = 0;\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// const MIN_SPEED = 0.8;\n// const MAX_SPEED = 8.2;\n\nimport { MIN_SPEED, MAX_SPEED } from './BlobDrawable';\n\nexport default class LineBlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.N = n;\n        this.radius = new Array(n + 1);\n\n        this.radiusNext = new Array(n + 1);\n        this.progress = new Array(n + 1);\n        this.speed = new Array(n + 1);\n\n        for (let i = 0; i <= n; i++) {\n            this.generateBlob(this.radius, i);\n            this.generateBlob(this.radiusNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, i) {\n        const { maxRadius, minRadius, speed } = this;\n\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    generateNextBlob() {\n        const { radius, radiusNext, progress, N } = this;\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, i);\n            this.generateBlob(radiusNext, i);\n            progress[i] = 0.0;\n        }\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext } = this;\n        for (let i = 0; i <= N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                this.generateBlob(radiusNext, i);\n            }\n        }\n    }\n\n    draw(left, top, right, bottom, canvas, paint, pinnedTop, progressToPinned) {\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n            ctx.moveTo(right, bottom);\n            ctx.lineTo(left, bottom);\n\n            const { radius, radiusNext, N } = this;\n            for (let i = 0; i <= N; i++) {\n                if (i === 0) {\n                    const progress = this.progress[i];\n                    const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                    const y = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.lineTo(left, y);\n                } else {\n                    const progress = this.progress[i - 1];\n                    const r1 = radius[i - 1] * (1.0 - progress) + radiusNext[i - 1] * progress;\n                    const progressNext = this.progress[i];\n                    const r2 = radius[i] * (1.0 - progressNext) + radiusNext[i] * progressNext;\n                    const x1 = (right - left) / N * (i - 1);\n                    const x2 = (right - left) / N * i;\n                    const cx = x1 + (x2 - x1) / 2;\n\n                    const y1 = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    const y2 = (top - r2) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.bezierCurveTo(\n                        cx, y1,\n                        cx, y2,\n                        x2, y2\n                    );\n                    if (i === N) {\n                        ctx.lineTo(right, bottom);\n                    }\n                }\n            }\n\n            // ctx.scale(1.0, 1.0);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LineBlobDrawable from './LineBlobDrawable';\n\nexport const MUTE_BUTTON_STATE_UNMUTE = 0;\nexport const MUTE_BUTTON_STATE_MUTE = 1;\nexport const MUTE_BUTTON_STATE_CONNECTING = 2;\nexport const MUTE_BUTTON_STATE_MUTED_BY_ADMIN = 3;\n\nexport class WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, x0, y0, x1, y1) {\n        const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.6, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            gradient.addColorStop(0, '#00B1C0');\n            gradient.addColorStop(1, '#52CE5D');\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            gradient.addColorStop(0, '#2BCEFF');\n            gradient.addColorStop(1, '#0976E3');\n        } else {\n            gradient.addColorStop(0, '#8599aa');\n            gradient.addColorStop(1, '#8599aa');\n        }\n\n        return gradient;\n    }\n\n    update(height, width, dt, amplitude) {\n        // TODO: move gradient here\n    }\n}\n\nclass TopBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.resizing = false;\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n        this.amplitude2 = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.prevState = null;\n        this.currentState = this.states[MUTE_BUTTON_STATE_CONNECTING];\n        this.progressToState = 1.0;\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.right = 1260 * this.scale;\n        this.bottom = 63 * this.scale;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        window.addEventListener('resize', this.handleResize);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n        const topBar = document.getElementById('top-bar');\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n\n        this.canvas = document.getElementById('canvas');\n        this.lbd = new LineBlobDrawable(3);\n        this.lbd1 = new LineBlobDrawable(7);\n        this.lbd2 = new LineBlobDrawable(8);\n        this.setAmplitude(this.amplitude);\n\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        window.removeEventListener('resize', this.handleResize);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.bottom = 63 * this.scale;\n\n        const topBar = document.getElementById('top-bar');\n        if (!topBar) return;\n\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n    }\n\n    handleResize = () => {\n        if (this.resizeHandler) {\n            clearTimeout(this.resizeHandler);\n            this.resizeHandler = null;\n        }\n\n        this.resizing = true;\n        this.resizeCanvas();\n        this.resizeHandler = setTimeout(() => {\n            this.resizing = false;\n            this.invokeDraw();\n        }, 250);\n    }\n\n    resizeCanvas() {\n        const topBar = document.getElementById('top-bar');\n\n        this.scale = window.devicePixelRatio;\n        this.right = topBar.offsetWidth * this.scale;\n\n        this.forceUpdate();\n        this.invokeDraw();\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        const { lbd, lbd1, lbd2, scale, left, top, right, bottom, currentState, previousState, focused, resizing } = this;\n        if (!focused && !resizing && this.progressToState >= 1.0) {\n            return;\n        }\n\n        // console.log('[top] draw', [focused, resizing, this.mounted]);\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        // console.log('draw start', this.amplitude, this.animateToAmplitude);\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude += this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (this.animateToAmplitude !== this.amplitude2) {\n            this.amplitude2 += this.animateAmplitudeDiff2 * dt;\n            if (this.animateAmplitudeDiff2 > 0) {\n                if (this.amplitude2 > this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude2 < this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (previousState) {\n            this.progressToState += dt / 250;\n            if (this.progressToState > 1) {\n                this.progressToState = 1;\n                this.previousState = null;\n            }\n        }\n\n        const top1 = 6 * this.amplitude2 * scale;\n        const top2 = 6 * this.amplitude2 * scale;\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        lbd.minRadius = 0;\n        lbd.maxRadius = (2 + 2 * this.amplitude) * scale;\n        lbd1.minRadius = 0;\n        lbd1.maxRadius = (3 + 9 * this.amplitude) * scale;\n        lbd2.minRadius = 0;\n        lbd2.maxRadius = (3 + 9 * this.amplitude) * scale;\n\n        lbd.update(this.amplitude, 0.3);\n        lbd1.update(this.amplitude, 0.7);\n        lbd2.update(this.amplitude, 0.7);\n\n        for (let i = 0; i < 2; i++) {\n            if (i === 0 && !previousState) {\n                continue;\n            }\n\n            let alpha = 1;\n            let state = null;\n            if (i === 0) {\n                alpha = 1 - this.progressToState;\n                state = previousState;\n                // previousState.setToPaint(paint);\n            } else {\n                alpha = previousState ? this.progressToState : 1;\n                currentState.update(bottom - top, right - left, dt, this.amplitude);\n                state = currentState;\n                // currentState.setToPaint(paint);\n            }\n\n            const paint1 = ctx => {\n                ctx.globalAlpha = 0.3 * alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n            const paint = ctx => {\n                ctx.globalAlpha = i === 0? 1 : alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n\n            lbd1.draw(left, top - top1, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd2.draw(left, top - top2, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd.draw(left, top, right, bottom, this.canvas, paint, top, 1.0);\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / 250;\n        this.animateAmplitudeDiff2 = (value - this.amplitude) / 120;\n    }\n\n    render() {\n        const { left, right, top, bottom, scale } = this;\n\n        return(\n            <div id='top-bar' className='top-bar'>\n                <canvas id='canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n            </div>\n        );\n    }\n}\n\nTopBar.propTypes = {};\n\nexport default TopBar;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport TopBar, { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { openGroupCallPanel } from '../../Actions/Call';\nimport { showSnackbar } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallTopPanel.css';\n\nclass GroupCallTopPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.topBarRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { call, status, connected, animated } = this.state;\n\n        if (nextState.call !== call) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.connected !== connected) {\n            return true;\n        }\n\n        if (nextState.animated !== animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n        this.topBarRef.current && this.topBarRef.current.setCurrentState(stateId, animated);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes, type } = update;\n        if (!amplitudes.length) return;\n\n        let max = 0;\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            max = value > max ? value : max;\n        }\n\n        if (type !== 'input') {\n            this.topBarRef.current && this.topBarRef.current.setAmplitude(max);\n        }\n    };\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        }, () => {\n            this.switchButtonState(true);\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.saveMessagesScrollPosition();\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.restoreMessagesScrollPosition(Boolean(call));\n            this.switchButtonState(true);\n        });\n    };\n\n    saveMessagesScrollPosition() {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const prevOffsetHeight = list.offsetHeight;\n            const prevScrollTop = list.scrollTop;\n\n            list.prevOffsetHeight = prevOffsetHeight;\n            list.prevScrollTop = prevScrollTop;\n        });\n    }\n\n    restoreMessagesScrollPosition(openPanel = true) {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const { prevScrollTop, prevOffsetHeight } = list;\n            if (list.scrollTop === prevScrollTop) {\n                const offsetHeightDiff = Math.abs(prevOffsetHeight - list.offsetHeight);\n                list.scrollTop += openPanel ? offsetHeightDiff : - offsetHeightDiff;\n            }\n        });\n    }\n\n    handleMicrophone = async event => {\n        event.stopPropagation();\n\n        const { call, status } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\n                return (\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => { closeSnackbar(snackKey); }}>\n                        <CloseIcon />\n                    </IconButton>\n                )\n            });\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenGroupCall = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        openGroupCallPanel();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { call, status, connected, animated } = this.state;\n        if (!call) return null;\n\n        const { chatId } = call;\n        const title = connected ? getChatTitle(chatId).toUpperCase() : t('Connecting');\n\n        return (\n            <div className='group-call-top-panel-wrapper'>\n                { animated ? (\n                    <TopBar ref={this.topBarRef}/>\n                    ) : (\n                    <div className={classNames('group-call-top-panel',\n                        {\n                            'group-call-top-panel-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-top-panel-unmuted': connected && status === 'unmuted',\n                            'group-call-top-panel-connecting': !connected,\n\n                        })}\n                    />\n                )}\n                <div className='group-call-top-panel-buttons' onClick={this.handleOpenGroupCall}>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleMicrophone}>\n                        {status === 'unmuted' ? <MicIcon fontSize='small'/> : <MicOffIcon fontSize='small' />}\n                    </IconButton>\n                    <div className='group-call-top-panel-title'>\n                        {title}\n                    </div>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleLeave}>\n                        <CallEndIcon fontSize='small' />\n                    </IconButton>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nGroupCallTopPanel.propTypes = {};\n\nexport default withTranslation()(GroupCallTopPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z' />,\n    'Block'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z' />,\n    'Phone'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BlockIcon from '../../Assets/Icons/Block';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\nimport PhoneIcon from '../../Assets/Icons/Phone';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport {\n    canClearHistory,\n    canDeleteChat,\n    getViewInfoTitle,\n    isPrivateChat,\n    getDeleteChatTitle,\n    hasOnePinnedMessage,\n    canSwitchBlocked,\n    getChatSender,\n    canManageVoiceChats,\n    canBeReported\n} from '../../Utils/Chat';\nimport { clearHistory, leaveChat, openReportChat } from '../../Actions/Chat';\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\nimport { requestUnpinMessage, showAlert } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null\n        };\n    }\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    handleSwitchBlocked = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const sender = getChatSender(chatId);\n        const { is_blocked } = chat;\n        if (is_blocked) {\n            unblockSender(sender);\n        } else {\n            requestBlockSender(sender);\n        }\n    };\n\n    handleStartGroupCall = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        showAlert({\n            title: LStore.getString('StartVoipChatTitle'),\n            message: LStore.getString('StartVoipChatAlertText'),\n            ok: LStore.getString('Start'),\n            cancel: LStore.getString('Cancel'),\n            onResult: async result => {\n                if (result){\n                    await CallStore.startGroupCall(chatId);\n                }\n            }\n        })\n    };\n\n    handleReport = () => {\n        this.handleMenuClose();\n\n        const { chatId } = this.props;\n\n        openReportChat(chatId, []);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_blocked, voice_chat_group_call_id } = chat;\n\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n        const switchBlocked = canSwitchBlocked(chatId);\n        const manageVoiceChats = canManageVoiceChats(chatId);\n        const reported = canBeReported(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    { !Boolean(voice_chat_group_call_id) && manageVoiceChats && (\n                        <MenuItem onClick={this.handleStartGroupCall}>\n                            <ListItemIcon>\n                                <PhoneIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('StartVoipChat')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                    {switchBlocked && (\n                        <MenuItem onClick={this.handleSwitchBlocked}>\n                            <ListItemIcon>\n                                <BlockIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\n                        </MenuItem>\n                    )}\n                    {reported && (\n                        <MenuItem onClick={this.handleReport}>\n                            <ListItemIcon>\n                                <ReportOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ReportChat')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown, animateOnMount } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown, animateOnMount);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown, animate = true) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = !animate ? '0ms' : '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height, getItemTemplate } = this.props;\n        const { from, to } = this.state;\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{getItemTemplate(to)}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? getItemTemplate(to) : getItemTemplate(from) }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? getItemTemplate(from) : getItemTemplate(to) }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    getItemTemplate: PropTypes.func,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number,\n    animateOnMount: PropTypes.bool\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    getItemTemplate: x => x,\n    scrollDown: true,\n    height: 21,\n    animateOnMount: true\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport { canBeReported } from '../../Utils/Chat';\nimport { openReportChat } from '../../Actions/Chat';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        forwardMessages(id, messageIds);\n    };\n\n    handleReport = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        openReportChat(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const items = Array.from(MessageStore.selectedItems.values());\n        const canReport = canBeReported(items.length > 0 ? items[0].chatId : 0);\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canReport && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleReport}>\n                        {t('ReportChat')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.state = {\n            chatId,\n            pinned,\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState()\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    setPinnedState() {\n        const { chatId } = this.state;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({ pinned });\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({\n            chatId,\n            pinned\n        });\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handlePinClick = () => {\n        const { chatId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            pinned,\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <div className='header-right-buttons'>\n                                { pinned.length > 1 && (\n                                    <IconButton\n                                        aria-label='Pins'\n                                        onClick={this.handlePinClick}\n                                        onMouseDown={this.handleMouseDown}>\n                                        <PlaylistEditIcon />\n                                    </IconButton>\n                                )}\n                                <IconButton\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\nimport { requestBlockSender } from '../../Actions/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarInviteMembers': {\n                break;\n            }\n        }\n        if (!content) {\n            return null;\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        const hasItems =\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\n        if (!hasItems) {\n            return null;\n        }\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                {/*{messageId}*/}\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport './GroupCallJoinPanelSubtitle.css';\n\nclass GroupCallJoinPanelSubtitle extends React.Component {\n    state = {\n        participantCount: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participantCount } = this.state;\n\n        if (nextState.participantCount !== participantCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            let participantCount = 0;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const { participant_count } = groupCall;\n                participantCount = participant_count;\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                participantCount\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== groupCallId) return;\n\n        let participantCount = 0;\n        const groupCall = CallStore.get(groupCallId);\n        if (groupCall) {\n            const { participant_count } = groupCall;\n            participantCount = participant_count;\n        }\n\n        this.setState({ participantCount });\n    };\n\n    render() {\n        const { t, participantsOnly } = this.props;\n        const { participantCount } = this.state;\n        // console.log('[call][GroupCallPanelSubtitle] render');\n\n        return (\n            <div className='group-call-join-panel-subtitle'>\n                {participantCount === 0 && !participantsOnly? t('MembersTalkingNobody') : LStore.formatPluralString('Participants', participantCount)}\n            </div>\n        );\n    }\n\n}\n\nGroupCallJoinPanelSubtitle.propTypes = {\n    groupCallId: PropTypes.number,\n    participantsOnly: PropTypes.bool\n};\n\nGroupCallJoinPanelSubtitle.defaultProps = {\n    participantsOnly: false\n}\n\nexport default withTranslation()(GroupCallJoinPanelSubtitle);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from '../Tile/UserTile';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallRecentParticipants.css';\n\nfunction speakersEquals(lhs, rhs) {\n    if (lhs.length !== rhs.length) return false;\n\n    for (let i = 0; i < lhs.length; i++) {\n        if (lhs[i].user_id !== rhs[i].user_id) return false;\n        if (lhs[i].is_speaking !== rhs[i].is_speaking) return false;\n    }\n\n    return true;\n}\n\nclass GroupCallRecentParticipants extends React.Component {\n    state = {\n        speakers: []\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { speakers } = this.state;\n\n        if (!speakersEquals(nextState.speakers, speakers)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { id } = props;\n        const { prevId } = state;\n\n        if (prevId !== id) {\n            let speakers = [];\n            const groupCall = CallStore.get(id);\n            if (groupCall) {\n                const { recent_speakers } = groupCall;\n                speakers = recent_speakers;\n            }\n\n            return {\n                prevId: id,\n                speakers\n            };\n        }\n\n        return null;\n    }\n\n    loadContent(speakers) {\n        const store = FileStore.getStore();\n        loadUsersContent(store, speakers.map(x => x.user_id));\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.speakers);\n\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { id } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== id) return;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        clearTimeout(this.timeout);\n        if (!speakers.length) {\n            this.setState({ speakers: [] });\n        } else {\n            this.loadContent(speakers);\n\n            this.timeout = setTimeout(() => {\n                this.updateSpeakers();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        }\n    };\n\n    updateSpeakers() {\n        const { id } = this.props;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        this.setState({ speakers });\n    }\n\n    render() {\n        const { speakers } = this.state;\n        if (!speakers) return null;\n        if (!speakers.length) return null;\n\n        return (\n            <div className='group-call-recent-participants'>\n                {[...speakers].reverse().map(x => <UserTile key={x.user_id} userId={x.user_id} small speaking={x.is_speaking}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallRecentParticipants.propTypes = {\n    id: PropTypes.number\n};\n\nexport default GroupCallRecentParticipants;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport GroupCallJoinPanelSubtitle from './GroupCallJoinPanelSubtitle';\nimport GroupCallRecentParticipants from './GroupCallRecentParticipants';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './GroupCallJoinPanel.css';\n\nclass GroupCallJoinPanel extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n\n            let groupCallId = 0;\n            if (chat) {\n                const { voice_chat_group_call_id } = chat;\n                groupCallId = voice_chat_group_call_id;\n            }\n\n            const { currentGroupCall } = CallStore;\n            const isCurrent = Boolean(currentGroupCall && currentGroupCall.chatId === chatId);\n\n            return {\n                prevChatId: chatId,\n                groupCallId,\n                isCurrent\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { isCurrent, groupCallId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.groupCallId !== groupCallId) {\n            return true;\n        }\n\n        if (nextState.isCurrent !== isCurrent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.on('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.on('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.off('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.off('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    handleUpdateChatVoiceChat = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if ( chatId !== chat_id) return;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n\n        this.setState({\n            groupCallId: voice_chat_group_call_id\n        });\n    }\n\n    handleUpdateGroupCall = update => {\n        const { group_call } = update;\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n        if (group_call && group_call.id !== voice_chat_group_call_id) return;\n\n        this.setState({\n            groupCallId: group_call ? group_call.id : 0\n        });\n    };\n\n    handleClientUpdateGroupCall = update => {\n        const { chatId } = this.props;\n\n        const { currentGroupCall } = CallStore;\n        const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\n\n        this.setState({ isCurrent });\n    };\n\n    handleJoin = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { voice_chat_group_call_id } = chat;\n        const groupCall = CallStore.get(voice_chat_group_call_id);\n        console.log('[call] handleJoin', groupCall);\n        if (groupCall && groupCall.is_joined) return;\n\n        const muted = true;\n        await CallStore.joinGroupCall(chatId, voice_chat_group_call_id, muted);\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const { groupCallId, isCurrent } = this.state;\n        if (!groupCallId) return null;\n        if (isCurrent) return null;\n\n        return (\n            <div className='group-call-join-panel' onClick={this.handleJoin}>\n                <div className='group-call-join-panel-content'>\n                    <div className='group-call-join-panel-title'>{t('VoipGroupVoiceChat')}</div>\n                    <GroupCallJoinPanelSubtitle groupCallId={groupCallId}/>\n                </div>\n                <GroupCallRecentParticipants id={groupCallId}/>\n                <Button className='group-call-join-panel-button' variant='contained' color='primary' disableElevation>\n                    {t('VoipChatJoin')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nGroupCallJoinPanel.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallJoinPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst MessageContext = React.createContext({\n    chatId: 0,\n    messageId: 0\n});\n\nexport default MessageContext;\n\nexport function withMessage(Component) {\n    class MessageComponent extends React.Component {\n        render() {\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\n        }\n    }\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\n\n    return MessageComponent;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport User from '../Tile/User';\nimport ChatStore from '../../Stores/ChatStore';\nimport './InputBoxHints.css'\n\nclass InputBoxHints extends React.Component {\n    state = {\n        local: [],\n        global: [],\n        id: null\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { local, global, id } = this.state;\n\n        if (nextState.local !== local) {\n            return true;\n        }\n\n        if (nextState.global !== global) {\n            return true;\n        }\n\n        if (nextState.id !== id) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    onClientUpdateHintsClose = update => {\n        this.setState({\n            id: null,\n            local: [],\n            global: []\n        });\n    };\n\n    onClientUpdateHintsGlobal = update => {\n        const { id, global } = update;\n        if (this.state.id !== id) return;\n\n        this.setState({\n            id,\n            global\n        });\n    };\n\n    onClientUpdateHintsLocal = update => {\n        const { id, local } = update;\n\n        this.setState({\n            id,\n            local,\n            global: []\n        });\n    };\n\n    render() {\n        const { local, global } = this.state;\n\n        const results = (local || []).concat(global || []);\n\n        // console.log('[hints] render', local, global, results);\n        if (!results.length) return null;\n\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n            </div>\n        );\n    }\n\n}\n\nInputBoxHints.propTypes = {};\n\nexport default InputBoxHints;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\n    'ArrowTopRight'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\n    'ShareFilled'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withMessage } from '../MessageContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PendingIcon from '../../../Assets/Icons/Pending';\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\nimport { getUserFullName } from '../../../Utils/User';\nimport { getChatTitle } from '../../../Utils/Chat';\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\nimport { openChatSelect } from '../../../Actions/Message';\nimport LStore from '../../../Stores/LocalizationStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './KeyboardButton.css';\n\nclass KeyboardButton extends React.Component {\n    state = {\n        loading: false\n    }\n\n    handleCallbackQueryAnswer = (type, result, message) => {\n        const { chatId } = this.props;\n        const { sender, content, via_bot_user_id } = message;\n        const { text, show_alert, url } = result;\n        const { game } = content;\n\n        let title = '';\n        if (message) {\n            if (via_bot_user_id) {\n                title = getUserFullName(via_bot_user_id, null);\n            } else {\n                title = getChatTitle(chatId, false);\n            }\n        }\n        title = title || LStore.getString('Bot');\n\n        if (text) {\n            if (show_alert) {\n                showAlert({\n                    title,\n                    message: text,\n                    ok: LStore.getString('OK')\n                });\n            } else {\n                showSnackbar(text, closeSnackbar => snackKey => {\n                    return (\n                        <IconButton\n                            key='close'\n                            aria-label='Close'\n                            color='inherit'\n                            className='notification-close-button'\n                            onClick={() => { closeSnackbar(snackKey); }}>\n                            <CloseIcon />\n                        </IconButton>\n                    )\n                });\n            }\n        } else if (url) {\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                const userId = via_bot_user_id ? via_bot_user_id : sender.user_id;\n                const user = UserStore.get(userId);\n\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\n            } else {\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\n            }\n        }\n    };\n\n    handleClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, type } = this.props;\n\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                showAlert({\n                    title: LStore.getString('AppName'),\n                    message: LStore.getString('PaymentsNotSupported'),\n                    ok: LStore.getString('OK')\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                /// gamee, querty_bot\n\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, content, via_bot_user_id } = message;\n                if (!content) break;\n\n                let payload = null;\n                let game = null;\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                    game = content.game;\n                    if (!game) break;\n\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\n                } else {\n                    payload = { '@type': 'callbackQueryPayloadData', data };\n                }\n\n                this.setState({ loading: true });\n                const result = await TdLibController.send({\n                    '@type': 'getCallbackQueryAnswer',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    payload\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                this.handleCallbackQueryAnswer(type, result, message);\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                /// BotFather + transfer bot\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                this.setState({ loading: true });\n                const passwordState = await TdLibController.send({\n                    '@type': 'getPasswordState'\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                const { has_password } = passwordState;\n                if (!has_password) break;\n\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\n                    console.log('[pwd] onPassword', password);\n                    this.setState({ loading: true });\n                    let error = null;\n                    const result = await TdLibController.send({\n                        '@type': 'getCallbackQueryAnswer',\n                        chat_id: chatId,\n                        message_id: messageId,\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\n                    }).catch(e => {\n                        error = e;\n                    }).finally(() => {\n                        this.setState({ loading: false });\n                    });\n\n                    if (error) {\n                        console.log('[pwd] onPassword error', error);\n                        onError && onError(error);\n                    } else if (result) {\n                        console.log('[pwd] onPassword result', result);\n                        onCloseDialog && onCloseDialog();\n                        this.handleCallbackQueryAnswer(type, result, message);\n                    }\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                const { url, id, forward_text } = type;\n\n                this.setState({ loading: true });\n                let hasError = false;\n                const result = await TdLibController.send({\n                    '@type': 'getLoginUrlInfo',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    button_id: id\n                }).catch(e => {\n                    hasError = true;\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                if (hasError) {\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                } else {\n                    switch (result['@type']) {\n                        case 'loginUrlInfoOpen': {\n                            const { url, skip_confirm } = result;\n\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\n                            break;\n                        }\n                        case 'loginUrlInfoRequestConfirmation': {\n                            const { url } = result;\n\n\n                            console.log('[login] result', result);\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                /// youtube\n                const { in_current_chat, query } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, via_bot_user_id } = message;\n                let userId = sender.user_id;\n                if (via_bot_user_id !== 0) {\n                    userId = via_bot_user_id;\n                }\n\n                const user = UserStore.get(userId);\n                if (!user) break;\n\n                const inline = `@${user.username} ${query}`;\n\n                if (in_current_chat){\n                    setText(inline);\n                } else {\n                    openChatSelect({ switchInline: inline });\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                /// qwerty_bot\n                const { url } = type;\n\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                break;\n            }\n        }\n    };\n\n    getIcon(type) {\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                const { in_current_chat } = type;\n\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n        }\n    }\n\n    render() {\n        const { text, type } = this.props;\n        const { loading } = this.state;\n\n        const icon = this.getIcon(type);\n\n        return (\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\n                {text}\n                {icon}\n                {loading && (\n                    <PendingIcon\n                        className='keyboard-button-progress'\n                        viewBox='0 0 14 14'\n                    />\n                )}\n            </ListItem>\n        );\n    }\n\n}\n\nKeyboardButton.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    text: PropTypes.string,\n    type: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default withMessage(KeyboardButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardButton from './KeyboardButton';\nimport './KeyboardRow.css';\n\nclass KeyboardRow extends React.Component {\n    render() {\n        const { row } = this.props;\n        if (!row) return null;\n        if (!row.length) return null;\n\n        return (\n            <div className='keyboard-row'>\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\n            </div>\n        );\n    }\n}\n\nKeyboardRow.propTypes = {\n    row: PropTypes.array\n};\n\nexport default KeyboardRow;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardRow from './KeyboardRow';\nimport MessageContext from '../MessageContext';\nimport './ReplyMarkup.css';\n\nclass ReplyMarkup extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId, prevMessageId } = state;\n        const { chatId, messageId } = props;\n\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                message: {\n                    chatId,\n                    messageId\n                }\n            }\n        }\n\n        return null;\n    }\n\n    render() {\n        const { markup } = this.props;\n        const { message } = this.state;\n\n        if (!markup) return null;\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        const { rows } = markup;\n        if (!rows.length) return null;\n\n        return (\n            <div className='reply-markup'>\n                <MessageContext.Provider value={message}>\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\n                </MessageContext.Provider>\n            </div>\n        );\n    }\n}\n\nReplyMarkup.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    markup: PropTypes.object\n};\n\nexport default ReplyMarkup;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\n            let totalLength = 0;\n            if (site_name) {\n                totalLength += site_name.length;\n            }\n            if (title) {\n                totalLength += title.length;\n            }\n            if (description) {\n                totalLength += description.text.length;\n            }\n\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport ReplyMarkup from './Markup/ReplyMarkup';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle,\n    isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageContent = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageEdited = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    handleUpdateMessageContentAndEditedOnce = () => {\n        const { updateMessageContent, updateMessageEdited } = this;\n        this.updateMessageContent = null;\n        this.updateMessageEdited = null;\n\n        if (!updateMessageContent && !updateMessageEdited) return;\n\n        const { chatId, messageId } = this.props;\n\n        let handled = false;\n        if (updateMessageContent) {\n            const { emojiMatches } = this.state;\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\n            if (newEmojiMatches !== emojiMatches) {\n                handled = true;\n                this.setState({ emojiMatches: newEmojiMatches });\n            }\n        }\n\n        if (handled) return;\n\n        startMessageEditing(chatId, messageId);\n        this.forceUpdate(() => {\n            stopMessageEditing(chatId, messageId);\n        });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender, reply_markup } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded =\n            !hasCaption  && (\n                content['@type'] === 'messageAnimation' ||\n                content['@type'] === 'messageVideo' ||\n                content['@type'] === 'messagePhoto' ||\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div>\n                                <div\n                                    className={classNames('message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                    style={style}>\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                        <div className='message-title'>\n                                            {showTitle && !showForward && (\n                                                <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\n                                            )}\n                                            {showForward && <Forward forwardInfo={forward_info} />}\n                                        </div>\n                                    )}\n                                    {showReply && (\n                                        <Reply\n                                            chatId={chatId}\n                                            messageId={reply_to_message_id}\n                                            onClick={this.handleReplyClick}\n                                        />\n                                    )}\n                                    {media}\n                                    <div\n                                        className={classNames('message-text', {\n                                            'message-text-1emoji': emojiMatches === 1,\n                                            'message-text-2emoji': emojiMatches === 2,\n                                            'message-text-3emoji': emojiMatches === 3\n                                        })}>\n                                        {text}\n                                    </div>\n                                    {webPage && (\n                                        <WebPage\n                                            chatId={chatId}\n                                            messageId={messageId}\n                                            openMedia={this.openMedia}\n                                            meta={inlineMeta}\n                                        />\n                                    )}\n                                    {withBubble && meta}\n                                </div>\n                                {reply_markup && (\n                                    <ReplyMarkup\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        markup={reply_markup}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\nimport MessageMenu from './MessageMenu';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false,\n            contextMenu: false,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted, contextMenu } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted, contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={null}\n                    source={'chat'}\n                />\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport GroupCallJoinPanel from '../Calls/GroupCallJoinPanel';\nimport InputBoxHints from './InputBoxHints';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { sendBotStartMessage } from '../../Actions/Message';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateStartMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { history } = this.state;\n        if (!history.length) return;\n\n        const { current: list } = this.listRef;\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\n            return;\n        }\n\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\n\n        this.scrollBottomAfterEditing = {\n            chatId,\n            messageId\n        };\n    };\n\n    onClientUpdateStopMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { scrollBottomAfterEditing } = this;\n        if (!scrollBottomAfterEditing) return;\n\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\n\n        const { current: list } = this.listRef;\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\n        this.scrollBottomAfterEditing = null;\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        const { prevScrollTop, prevOffsetHeight } = this;\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop -= Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId, ignoreUnread = false) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (!ignoreUnread && unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n                if (this.props.options) {\n                    const { botStartMessage } = this.props.options;\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\n                        const { botUserId, parameter } = botStartMessage;\n\n                        await sendBotStartMessage(chatId, botUserId, parameter);\n                    }\n                }\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\n        if (hasLastMessage) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, 0, messageId, true);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender, prevMessage.sender) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <div className='messages-list-top-panel'>\n                    <GroupCallJoinPanel chatId={chatId}/>\n                    <ActionBar chatId={chatId} />\n                </div>\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n                {/*<InputBoxHints />*/}\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    options: PropTypes.object,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { closeChatSelect } from '../../Actions/Message';\nimport './SelectChatPlaceholder.css';\n\nclass SelectChatPlaceholder extends React.Component {\n\n    handleClick = () => {\n        closeChatSelect();\n    }\n\n    render() {\n        const { t } = this.props;\n\n        return (\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\n            </div>\n        );\n    }\n\n}\n\nSelectChatPlaceholder.propTypes = {};\n\nexport default withTranslation()(SelectChatPlaceholder);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport GroupCallTopPanel from '../Calls/GroupCallTopPanel';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null,\n            chatSelectOptions: null,\n            chatOpenOptions: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\n            return true;\n        }\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.off('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateClearOpenChatOptions = update => {\n        this.setState({\n            chatOpenOptions: null\n        });\n    }\n\n    onClientUpdateChatSelect = update => {\n        const { options } = update;\n\n        this.setState({\n            chatSelectOptions: options\n        });\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatSelectOptions } = this.state;\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\n\n        this.setState({\n            chatId,\n            messageId,\n            chatOpenOptions,\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <GroupCallTopPanel/>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\n                </div>\n                {chatSelectOptions && <SelectChatPlaceholder/>}\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\nimport AppStore from '../../Stores/ApplicationStore';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        messageIds.sort();\n\n        this.targetChats.forEach(async targetChatId => {\n            if (inputMessageContent) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BlobDrawable, {\n    AMPLITUDE_SPEED,\n    FORM_BIG_MAX,\n    FORM_SMALL_MAX, LIGHT_GRADIENT_SIZE,\n    SCALE_BIG,\n    SCALE_BIG_MIN,\n    SCALE_SMALL,\n    SCALE_SMALL_MIN\n} from './BlobDrawable';\nimport {\n    MUTE_BUTTON_STATE_CONNECTING,\n    MUTE_BUTTON_STATE_MUTE,\n    MUTE_BUTTON_STATE_MUTED_BY_ADMIN,\n    MUTE_BUTTON_STATE_UNMUTE\n} from './TopBar';\nimport { stopPropagation } from '../../Utils/Message';\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/OvershootInterpolator.java\nclass OvershootInterpolator {\n    constructor(tension) {\n        this.mTension = tension;\n    }\n\n    getInterpolation(t) {\n        // _o(t) = t * t * ((tension + 1) * t + tension)\n        // o(t) = _o(t - 1) + 1\n        t -= 1.0;\n        return t * t * ((this.mTension + 1) * t + this.mTension) + 1.0;\n    }\n}\n\n// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/DecelerateInterpolator.java\nclass DecelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n    }\n\n    getInterpolation(input) {\n        let result;\n        if (this.mFactor === 1.0) {\n            result = 1.0 - (1.0 - input) * (1.0 - input);\n        } else {\n            result = 1.0 - Math.pow((1.0 - input), 2 * this.mFactor);\n        }\n        return result;\n    }\n}\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/AccelerateInterpolator.java\nclass AccelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n        this.mDoubleFactor = 2 * this.mFactor;\n    }\n\n    getInterpolation(input) {\n        if (this.mFactor === 1.0) {\n            return input * input;\n        }\n\n        return Math.pow(input, this.mDoubleFactor);\n    }\n}\n\nclass WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    update(top, left, size, dt) {\n        // TODO: move gradient here\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, left, top, right, bottom) {\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            const gradient = ctx.createLinearGradient(0, 100, 100, 0);\n\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.3, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            const gradient=ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#77E55C');\n            gradient.addColorStop(1, '#56C7FE');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            const gradient = ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#66D4FB');\n            gradient.addColorStop(1, '#539EF8');\n\n            return gradient;\n        } else {\n            const gradient = ctx.createLinearGradient(0, 400, 400, 0);\n\n            gradient.addColorStop(0, '#2B333E');\n            gradient.addColorStop(1, '#2B333E');\n\n            return gradient;\n        }\n    }\n}\n\nclass RadialProgressView {\n    constructor() {\n        this.decelerateInterpolator = new DecelerateInterpolator();\n        this.accelerateInterpolator = new AccelerateInterpolator();\n\n        this.lineCap = 'round';\n        this.lineWidth = 3;\n        this.progressColor = '#1C93E3';\n        this.updateProgressPaint();\n\n        this.lastUpdateTime = 0;\n        this.radOffset = 0;\n        this.currentCircleLength = 0;\n        this.risingCircleLength = false;\n        this.currentProgressTime = 0;\n        this.useSelfAlpha = false;\n        this.drawingCircleLength = 0;\n\n        this.rotationTime = 2000;\n        this.risingTime = 500;\n        this.size = 0;\n\n        this.currentProgress = 0;\n        this.progressAnimationStart = 0;\n        this.progressTime = 0;\n        this.animatedProgress = 0;\n        this.circle = false;\n        this.circleProgress = 0;\n        this.noProgress = true;\n    }\n\n    setUseSelfAlpha = value => {\n        this.useSelfAlpha = value;\n    };\n\n    setAlpha = alpha => {\n        console.log('[rpv] setAlpha', alpha);\n    };\n\n    setNoProgress = value => {\n        this.noProgress = value;\n    };\n\n    setProgress = value => {\n        this.currentProgress = value;\n        if (this.animatedProgress > value) {\n            this.animatedProgress = value;\n        }\n\n        this.progressAnimationStart = this.animatedProgress;\n        this.progressTime = 0;\n    };\n\n    updateAnimation = () => {\n        const newTime = new Date();\n        let dt = newTime - this.lastUpdateTime;\n        if (dt > 17) {\n            dt = 17;\n        }\n        this.lastUpdateTime = newTime;\n\n        this.radOffset += 360 * dt / this.rotationTime;\n        let count = Math.trunc(this.radOffset / 360);\n        this.radOffset -= count * 360;\n\n        if (this.circle && this.circleProgress !== 1.0) {\n            this.circleProgress += 16 / 220;\n            if (this.circleProgress > 1.0) {\n                this.circleProgress = 1.0;\n            }\n        } else if (!this.circle && this.circleProgress !== 0.0) {\n            this.circleProgress -= 16 / 400;\n            if (this.circleProgress < 0) {\n                this.circleProgress = 0;\n            }\n        }\n\n        if (this.noProgress) {\n            if (this.circleProgress === 0) {\n                this.currentProgressTime += dt;\n                if (this.currentProgressTime >= this.risingTime) {\n                    this.currentProgressTime = this.risingTime;\n                }\n                if (this.risingCircleLength) {\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                } else {\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                }\n\n                if (this.currentProgressTime === this.risingTime) {\n                    if (this.risingCircleLength) {\n                        this.radOffset += 270;\n                        this.currentCircleLength = -266;\n                    }\n\n                    this.risingCircleLength = !this.risingCircleLength;\n                    this.currentProgressTime = 0;\n                }\n            } else {\n                if (this.risingCircleLength) {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                    this.currentCircleLength += 360 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                } else {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                    this.currentCircleLength -= 364 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                }\n            }\n        }\n        else {\n            let progressDiff = this.currentProgress - this.progressAnimationStart;\n            if (progressDiff > 0) {\n                progressDiff += dt;\n                if (this.progressTime >= 200) {\n                    this.animatedProgress = this.progressAnimationStart = this.currentProgress;\n                    this.progressTime = 0;\n                } else {\n                    this.animatedProgress = this.progressAnimationStart + progressDiff * this.decelerateInterpolator.getInterpolation(this.progressTime / 200);\n                }\n            }\n            this.currentCircleLength = Math.max(4, 360 * this.animatedProgress);\n        }\n    };\n\n    setSize = size => {\n        this.size = size;\n    };\n\n    setStrokeWidth = value => {\n        this.lineWidth = value;\n        this.updateProgressPaint();\n    };\n\n    setProgressColor = color => {\n        this.progressColor = color;\n        this.updateProgressPaint();\n    };\n\n    updateProgressPaint() {\n        this.progressPaint = ctx => {\n            if (this.lineCap) {\n                ctx.lineCap = this.lineCap;\n            }\n            if (this.lineWidth) {\n                ctx.lineWidth = this.lineWidth;\n            }\n            if (this.progressColor) {\n                ctx.strokeStyle = this.progressColor;\n            }\n        };\n    }\n\n    toCircle = (toCircle, animated) => {\n        this.circle = toCircle;\n        if (!animated) {\n            this.circleProgress = this.circle ? 1.0 : 0.0;\n        }\n    }\n\n    draw = (canvas, cx, cy, scale = 1) => {\n        this.circleRect = { x0: cx - this.size / 2, y0: cy - this.size / 2, x1: cx + this.size / 2, y1: cy + this.size / 2 };\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(cx, cy);\n            ctx.scale(scale, scale);\n            ctx.beginPath();\n            if (!this.risingCircleLength) {\n                if ((this.radOffset + this.currentCircleLength) > this.radOffset) {\n                    this.currentCircleLength = 0;\n                }\n            }\n\n            const radStart = this.radOffset * Math.PI / 180;\n            this.drawingCircleLength = this.currentCircleLength;\n            const radLength = this.drawingCircleLength * Math.PI / 180;\n\n\n            ctx.arc(0, 0, this.size / 2, radStart, radStart + radLength, !this.risingCircleLength);\n            this.progressPaint(ctx);\n            ctx.stroke();\n            ctx.restore();\n\n            this.updateAnimation();\n        }\n    }\n\n    isCircle = () => {\n        return Math.abs(this.drawingCircleLength) >= 360;\n    }\n}\n\nclass Button extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.radialPaint = ctx => { };\n        this.paint = ctx => { };\n        this.paintTmp = ctx => { };\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.switchProgress = 1.0;\n        this.muteButtonState = MUTE_BUTTON_STATE_MUTE;\n        this.prevState = null;\n        this.currentState = this.states[this.muteButtonState];\n        this.progressToState = 1.0;\n\n        this.showLightingProgress = 1.0;\n        this.showWavesProgress = 1.0;\n        this.overshootInterpolator = new OvershootInterpolator(1.5);\n        this.colorsTmp = new Array(3);\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n\n        this.buttonDefaultRadius = 57;\n        this.buttonRadius = 52;\n        this.strokeWidth = 4;\n        this.invalidateColors = true;\n        this.radialProgressView = new RadialProgressView();\n        this.radialProgressView.setSize(this.buttonRadius * 2 - this.strokeWidth);\n        this.radialProgressView.setStrokeWidth(this.strokeWidth);\n        this.radialProgressView.setProgressColor('#28BAFF');\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n\n        this.canvas = document.getElementById('button-canvas');\n        this.tinyWaveDrawable = new BlobDrawable(9);\n        this.bigWaveDrawable = new BlobDrawable(12);\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc(72 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.generateInitBlob();\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc(75 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.generateInitBlob();\n\n        const color = '#66D4FB';\n        this.radialGradient = ctx => {\n            const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 160);\n            gradient.addColorStop(0, color + '32');\n            gradient.addColorStop(1, color + '00');\n\n            ctx.fillStyle = gradient;\n        };\n        this.radialPaint = this.radialGradient;\n\n        this.setAmplitude(this.amplitude);\n\n        // console.log('[button] componentDidMount draw');\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n        this.forceUpdate();\n    }\n\n    fillColors(stateId, colorsToSet) {\n        if (stateId === MUTE_BUTTON_STATE_UNMUTE) {\n            colorsToSet[0] = '#66D4FB';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTE) {\n            colorsToSet[0] = '#7DDCAA';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            colorsToSet[0] = '#766EE9';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else {\n            colorsToSet[0] = '#1C2229';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        }\n    }\n\n    strToHex(n) {\n        let s = n.toString(16);\n        if (s.length === 1) {\n            s = '0' + s;\n        }\n        return s;\n    }\n\n    blendARGB(color1, color2, ratio) {\n        if (color1.length <= 7) {\n            color1 += 'FF';\n        }\n        if (color2.length <= 7) {\n            color2 += 'FF';\n        }\n        const c1 = {\n            r: parseInt(color1.substr(1, 2), 16),\n            g: parseInt(color1.substr(3, 2), 16),\n            b: parseInt(color1.substr(5, 2), 16),\n            a: parseInt(color1.substr(7, 2), 16),\n        };\n        const c2 = {\n            r: parseInt(color2.substr(1, 2), 16),\n            g: parseInt(color2.substr(3, 2), 16),\n            b: parseInt(color2.substr(5, 2), 16),\n            a: parseInt(color2.substr(7, 2), 16),\n        };\n\n        const inverseRatio = 1 - ratio;\n        const a = Math.trunc(c1.a * inverseRatio + c2.a * ratio) % 256;\n        const r = Math.trunc(c1.r * inverseRatio + c2.r * ratio) % 256;\n        const g = Math.trunc(c1.g * inverseRatio + c2.g * ratio) % 256;\n        const b = Math.trunc(c1.b * inverseRatio + c2.b * ratio) % 256;\n\n        return `#${this.strToHex(r)}${this.strToHex(g)}${this.strToHex(b)}`;\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        if (!this.focused && this.switchProgress >= 1.0) {\n            return;\n        }\n        // console.log('[button] draw', [this.focused, this.mounted]);\n        const { currentState, prevState, left, top, right, bottom } = this;\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc((62 + 20 * FORM_SMALL_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc((65 + 20 * FORM_BIG_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude = this.amplitude + this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        let canSwitchProgress = true;\n        if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, true);\n            if (!this.radialProgressView.isCircle()) {\n                canSwitchProgress = false;\n            }\n        } else if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, false);\n        }\n\n        if (canSwitchProgress) {\n            if (this.switchProgress !== 1) {\n                if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.switchProgress += dt / 100;\n                } else {\n                    this.switchProgress += dt / 180;\n                }\n\n                if (this.switchProgress >= 1.0) {\n                    this.switchProgress = 1.0;\n                    this.prevState = null;\n                    if (currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        this.radialProgressView.toCircle(false, true);\n                    }\n                }\n                this.invalidateColors = true;\n            }\n\n            if (this.invalidateColors && currentState) {\n                this.invalidateColors = false;\n                let lightingColor;\n                if (prevState) {\n                    this.fillColors(prevState.stateId, this.colorsTmp);\n                    const oldLight = this.colorsTmp[0];\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    const newLight = this.colorsTmp[0];\n                    lightingColor = this.blendARGB(oldLight, newLight, this.switchProgress);\n                } else {\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    lightingColor = this.colorsTmp[0];\n                }\n                if (this.currentLightColor !== lightingColor) {\n                    this.radialGradient = ctx => {\n                        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 100);\n\n                        gradient.addColorStop(0, lightingColor + '3C');\n                        gradient.addColorStop(1, lightingColor + '00');\n\n                        ctx.fillStyle = gradient;\n                    };\n                    this.currentLightColor = lightingColor;\n                }\n            }\n\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId !== MUTE_BUTTON_STATE_CONNECTING;\n            }\n\n            if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                this.showWavesProgress -= dt / 180;\n                if (this.showWavesProgress < 0) {\n                    this.showWavesProgress = 0;\n                }\n            } else {\n                if (showWaves && this.showWavesProgress !== 1) {\n                    this.showWavesProgress += dt / 350;\n                    if (this.showWavesProgress > 1) {\n                        this.showWavesProgress = 1;\n                    }\n                } else if (!showWaves && this.showWavesProgress !== 0) {\n                    this.showWavesProgress -= dt / 350;\n                    if (this.showWavesProgress < 0) {\n                        this.showWavesProgress = 0;\n                    }\n                }\n            }\n\n            if (showLighting && this.showLightingProgress !== 1) {\n                this.showLightingProgress += dt / 350;\n                if (this.showLightingProgress > 1) {\n                    this.showLightingProgress = 1;\n                }\n            } else if (!showLighting && this.showLightingProgress !== 0) {\n                this.showLightingProgress -= dt / 350;\n                if (this.showLightingProgress < 0) {\n                    this.showLightingProgress = 0;\n                }\n            }\n        }\n\n        let showWavesProgressInterpolated = this.overshootInterpolator.getInterpolation(this.showWavesProgress);\n        showWavesProgressInterpolated = 0.4 + 0.6 * showWavesProgressInterpolated;\n\n        this.bigWaveDrawable.update(this.amplitude, 1.0);\n        this.tinyWaveDrawable.update(this.amplitude, 1.0);\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.resetTransform();\n\n        const cx = this.cx;\n        const cy = this.cy;\n\n        if (prevState && currentState && (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING || prevState.stateId === MUTE_BUTTON_STATE_CONNECTING)) {\n            let progress;\n            if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                progress = this.switchProgress;\n                this.paint = prevState.shader;\n            } else {\n                progress = 1.0 - this.switchProgress;\n                this.paint = currentState.shader;\n            }\n\n            this.paintTmp = ctx => {\n                ctx.fillStyle = '#2B333E';\n            }\n\n            let paint = ctx => {\n                this.paint(ctx, left, top, right, bottom);\n            };\n\n            ctx.globalAlpha = 1.0;\n            let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n            const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n            this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n\n            ctx.globalAlpha = 0.3;\n            // big wave\n            ctx.save();\n            scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n            ctx.restore();\n\n            // small wave\n            ctx.save();\n            scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n            ctx.restore();\n\n            ctx.globalAlpha = 1.0;\n            if (canSwitchProgress) {\n                this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                paint = ctx => {\n                    ctx.fillStyle = '#28BAFF';\n                };\n                if (progress !== 0) {\n                    ctx.globalAlpha = progress;\n                    this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                }\n            }\n            ctx.globalAlpha = 1.0;\n            this.drawCircle(ctx, cx, cy, 1,Math.trunc(this.buttonRadius - 0.5 * this.strokeWidth) * progress * this.scale, this.paintTmp);\n            if  (!canSwitchProgress) {\n                this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n            }\n            ctx.restore();\n        } else {\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                ctx.globalAlpha = 1.0;\n                let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n                if (i === 1) {\n                    const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n                    this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n                }\n\n                ctx.globalAlpha = 0.3 * alpha;\n                // big wave\n                ctx.save();\n                scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n                ctx.restore();\n\n                // small wave\n                ctx.save();\n                scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n                ctx.restore();\n            }\n\n            // button\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                if (i === 0) {\n                    ctx.globalAlpha = 1.0;\n                } else {\n                    ctx.globalAlpha = alpha;\n                }\n                this.drawCircle(ctx, cx, cy, this.scale, buttonRadius, paint);\n\n                if (i === 1 && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n                }\n            }\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    drawCircle(ctx, cx, cy, scale, radius, paint) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.translate(cx, cy);\n        ctx.scale(scale, scale);\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI, false);\n        ctx.closePath();\n        paint && paint(ctx);\n        ctx.fill();\n        ctx.restore();\n    }\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    updateMuteButton = (stateId, animated) => {\n        const { muteButtonState } = this;\n        if (muteButtonState === stateId && animated) {\n            return;\n        }\n\n        // TODO: add text animation\n\n        if (animated) {\n            this.muteButtonState = stateId;\n        } else {\n            this.muteButtonState = stateId;\n        }\n        this.updateMuteButtonState(animated);\n    }\n\n    updateMuteButtonState (animated) {\n        const { states, currentState, muteButtonState } = this;\n\n        if (states[muteButtonState] !== currentState) {\n            this.prevState = currentState;\n            this.currentState = states[muteButtonState];\n            if (!this.prevState || !animated) {\n                this.switchProgress = 1.0;\n                this.prevState = null;\n            } else {\n                this.switchProgress = 0.0;\n            }\n        }\n\n        if (!animated) {\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId === MUTE_BUTTON_STATE_CONNECTING;\n            }\n            this.showWavesProgress = showWaves ? 1.0 : 0.0;\n            this.showLightingProgress = showLighting ? 1.0 : 0.0;\n        }\n    }\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / (100 + 500 * AMPLITUDE_SPEED);\n        // console.log('[button] setAmplitude', [this.amplitude, this.animateToAmplitude, this.animateAmplitudeDiff]);\n    }\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    }\n\n    render() {\n        const { children, onClick } = this.props;\n        const { left, right, top, bottom, scale } = this;\n\n        return (\n            <div id='button' className='button' style={{ height: bottom / scale, borderRadius: 12, position: 'relative', transform: 'translateY(-14px)' }}>\n                <canvas id='button-canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n                <div style={{\n                    position: 'absolute',\n                    background: 'transparent',\n                    width: 104,\n                    height: 104,\n                    borderRadius: '50%',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    left: '50%',\n                    top: '50%',\n                    marginLeft: -52,\n                    marginTop: -38,\n                    cursor: 'pointer'\n                }}\n                     onMouseDown={stopPropagation}\n                     onClick={onClick}>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nButton.propTypes = {};\n\nexport default Button;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport AnimatedItem from '../ColumnMiddle/AnimatedItem';\nimport './GroupCallMicButtonHint.css';\n\nclass GroupCallMicButtonHint extends React.Component {\n\n    getItemTemplate = item => {\n        const { t } = this.props;\n\n        let title = '';\n        let subtitle = '';\n        switch (item) {\n            case 'muted': {\n                title = t('VoipGroupUnmute');\n                subtitle = t('VoipHoldAndTalk');\n                break;\n            }\n            case 'unmuted': {\n                title = t('VoipTapToMute');\n                break;\n            }\n            case 'forceMuted': {\n                title = t('VoipMutedByAdmin');\n                subtitle = t('VoipMutedByAdminInfo');\n                break;\n            }\n            case 'connecting': {\n                title = t('Connecting');\n                break;\n            }\n        }\n\n        return (\n            <div className='group-call-mic-button-hint-item'>\n                <div className='group-call-mic-button-hint-title'>{title}</div>\n                {subtitle && <div className='group-call-mic-button-hint-subtitle'>{subtitle}</div>}\n            </div>\n        );\n    }\n\n    render() {\n        const { className, status } = this.props;\n\n        return (\n            <div className={classNames('group-call-mic-button-hint', className)}>\n                <AnimatedItem item={status} height={37} getItemTemplate={this.getItemTemplate} scrollDown={true} animateOnMount={false}/>\n            </div>\n        );\n    }\n}\n\nGroupCallMicButtonHint.propTypes = {\n    status: PropTypes.string\n};\n\nexport default withTranslation()(GroupCallMicButtonHint);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from './Button';\nimport GroupCallMicButtonHint from './GroupCallMicButtonHint';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallMicButton.css';\n\nclass GroupCallMicButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.buttonRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected, animated, shook } = this.state;\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (shook !== nextState.shook) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes } = update;\n        if (!amplitudes.length) return;\n\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            if (type === 'input') {\n                this.buttonRef.current && this.buttonRef.current.setAmplitude(value);\n                return;\n            }\n        }\n    };\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n\n        this.buttonRef.current && this.buttonRef.current.updateMuteButton(stateId, true);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id, is_muted } = participant\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    };\n\n    handleClick = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            const { shook } = this.state;\n            if (shook) {\n                this.setState({\n                    shook: false\n                }, () => {\n                    requestAnimationFrame(() => {\n                        this.setState({ shook: true });\n                    })\n                });\n            } else {\n                this.setState({\n                    shook: true\n                });\n            }\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    render() {\n        const { status, connected, animated, shook } = this.state;\n        // console.log('[call][GroupCallMicButton] render');\n\n        return (\n            <div className='group-call-mic-button-wrapper' >\n                {animated ? (\n                    <Button ref={this.buttonRef} onClick={this.handleClick}>\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </Button>\n                ) : (\n                    <div className={classNames('group-call-mic-button',\n                        {\n                            'group-call-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-unmuted': connected && status === 'unmuted',\n                            'group-call-connecting': !connected,\n                        })}\n                         onClick={this.handleClick}\n                    >\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </div>\n                )}\n                <GroupCallMicButtonHint className={shook ? 'shook-horizontal' : ''} status={connected ? status : 'connecting'}/>\n            </div>\n        )\n    }\n}\n\nGroupCallMicButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallMicButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallPanelButtons.css'\nimport { getCallStatus } from '../../Calls/Utils';\n\nclass GroupCallPanelButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected } = this.state;\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        });\n    };\n\n    render() {\n        const { children } = this.props;\n        const { status, connected } = this.state;\n        // console.log('[call][GroupCallPanelButtons] render');\n\n        return (\n            <div className={classNames('group-call-panel-buttons', {\n                'group-call-connecting': !connected,\n                'group-call-muted': connected && status === 'muted',\n                'group-call-muted-by-admin': connected && status === 'forceMuted',\n                'group-call-unmuted': connected && status === 'unmuted',\n            })}>\n                {children}\n            </div>\n        );\n    }\n}\n\nGroupCallPanelButtons.propTypes = {};\n\nexport default GroupCallPanelButtons;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />,\n    'AddMember'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5zm6 6c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\" />,\n    'MicOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M10.8 4.9c0-.66.54-1.2 1.2-1.2s1.2.54 1.2 1.2l-.01 3.91L15 10.6V5c0-1.66-1.34-3-3-3-1.54 0-2.79 1.16-2.96 2.65l1.76 1.76V4.9zM19 11h-1.7c0 .58-.1 1.13-.27 1.64l1.27 1.27c.44-.88.7-1.87.7-2.91zM4.41 2.86L3 4.27l6 6V11c0 1.66 1.34 3 3 3 .23 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.55-.9l4.2 4.2 1.41-1.41L4.41 2.86z\" />,\n    'MicOffOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport MicIcon from '../../Assets/Icons/MicOutlined';\nimport MicOffIcon from '../../Assets/Icons/MicOffOutlined';\nimport UserTile from '../Tile/UserTile';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getUserFullName } from '../../Utils/User';\nimport { openUser } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallParticipant.css';\n\nclass GroupCallParticipant extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        participant: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, groupCallId } = props;\n        const { prevUserId, prevGroupCallId } = state;\n\n        if (prevUserId !== userId || prevGroupCallId !== groupCallId) {\n            const participants = CallStore.participants.get(groupCallId) || new Map();\n            const participant = participants.get(userId);\n\n            return {\n                prevUserId: userId,\n                prevGroupCallId: groupCallId,\n                participant\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participant, left, top, contextMenu } = this.state;\n\n        if (participant !== nextState.participant) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId, userId } = this.props;\n        const { group_call_id, participant } = update;\n        if (groupCallId !== group_call_id) return;\n        if (!participant) return;\n\n        const { user_id } = participant;\n        if (userId !== user_id) return;\n\n        this.setState({\n            participant\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleOpenProfile = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, true);\n        closeGroupCallPanel();\n    };\n\n    handleSendMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, false);\n        closeGroupCallPanel();\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, true);\n    };\n\n    handleUnmute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, false);\n    };\n\n    render() {\n        const { userId, t } = this.props;\n        const { contextMenu, left, top, participant } = this.state;\n        // console.log('[call][GroupCallParticipant] render', participant);\n        if (!participant) return null;\n\n        const { is_speaking, is_muted_for_all_users, is_muted_for_current_user, can_unmute_self, can_be_muted_for_all_users, can_be_unmuted_for_all_users } = participant;\n        const isMuted = is_muted_for_all_users || is_muted_for_current_user;\n\n        return (\n            <div className='group-call-participant' onClick={this.handleOpenContextMenu} onContextMenu={this.handleOpenContextMenu}>\n                <UserTile userId={userId}/>\n                <div className='group-call-participant-content'>\n                    <div className='group-call-participant-content-title'>\n                        {/*{userId}*/}\n                        {getUserFullName(userId)}\n                    </div>\n                    <div className={classNames('group-call-participant-content-subtitle', 'participant-listening', { 'participant-speaking': is_speaking })}>\n                        {/*{order}*/}\n                        {is_speaking ? t('Speaking') : t('Listening')}\n                    </div>\n                </div>\n                <div className={classNames('group-call-participant-mic', { 'participant-muted-by-admin': isMuted && !can_unmute_self, 'participant-speaking': is_speaking })}>\n                    {!isMuted || is_speaking ? <MicIcon /> : <MicOffIcon />}\n                </div>\n\n                <Popover\n                    classes={{\n                        paper: 'group-call-participant-menu-root'\n                    }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        { can_be_unmuted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleUnmute}>\n                                <ListItemText primary={t('VoipGroupUnmute')} />\n                            </MenuItem>\n                        )}\n                        { can_be_muted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleMute}>\n                                <ListItemText primary={t('VoipGroupMute')} />\n                            </MenuItem>\n                        )}\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleOpenProfile}>\n                            <ListItemText primary={t('VoipGroupOpenProfile')} />\n                        </MenuItem>\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleSendMessage}>\n                            <ListItemText primary={t('SendMessage')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n\n}\n\nGroupCallParticipant.propTypes = {\n    userId: PropTypes.number,\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipant);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\nimport GroupCallParticipant from './GroupCallParticipant';\nimport { albumHistoryEquals, orderCompare } from '../../Utils/Common';\nimport { canManageVoiceChats } from '../../Utils/Chat';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallParticipants.css';\n\nclass GroupCallParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            participants: []\n        };\n\n        this.participantsMap = new Map();\n        // this.updateParticipants = throttle(this.updateParticipants, 1000);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n            const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n            return {\n                prevGroupCallId: groupCallId,\n                participants: participants.map(x => x.user_id)\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participants } = this.state;\n        if (!albumHistoryEquals(participants, nextState.participants)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.preloadContent();\n\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId } = this.props;\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        if (group_call_id !== groupCallId) return;\n\n        const { order, user_id } = participant;\n        if (order !== '0') {\n            this.participantsMap.set(user_id, user_id);\n            this.loadContent();\n\n            // wait for profile photo\n            setTimeout(() => {\n                this.updateParticipants();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        } else {\n            this.updateParticipants();\n        }\n    };\n\n    updateParticipants() {\n        const { groupCallId } = this.props;\n\n        const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n        const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n        this.setState({\n            participants: participants.map(x => x.user_id)\n        });\n    }\n\n    preloadContent = () => {\n        const { participants } = this.state;\n        if (!participants) return;\n        if (!participants.length) return;\n\n        participants.forEach(x => {\n            this.participantsMap.set(x, x);\n        });\n        this.loadContent();\n    };\n\n    loadContent = () => {\n        const { participantsMap } = this;\n        if (!participantsMap) return;\n        if (!participantsMap.size) return;\n\n        this.participantsMap = new Map();\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, Array.from(participantsMap.keys()));\n    }\n\n    render() {\n        const { t, groupCallId } = this.props;\n        const { participants } = this.state;\n        // console.log('[call][GroupCallParticipants] render');\n\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        const manageGroupCalls = canManageVoiceChats(chatId);\n\n        return (\n            <div className='group-call-participants'>\n                { manageGroupCalls && (\n                    <div className='group-call-participants-invite'>\n                        <AddMemberIcon/>\n                        <div className='group-call-participants-invite-text'>\n                            {t('VoipGroupInviteMember')}\n                        </div>\n                    </div>\n                )}\n                {participants.map(x => <GroupCallParticipant key={x} userId={x} groupCallId={groupCallId}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallParticipants.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipants);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getAmplitude } from '../../Calls/Utils';\nimport './GroupCallMicAmplitude.css';\n\nclass GroupCallMicAmplitude extends React.Component {\n    constructor(props) {\n        super(props);\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.timer = null;\n\n        this.state = {\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.addAnalyser(stream);\n        }\n    }\n\n    componentWillUnmount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.removeAnalyser(stream);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { stream } = this.props;\n        if (prevProps.stream !== stream) {\n            this.removeAnalyser(prevProps.stream);\n            this.addAnalyser(stream);\n        }\n    }\n\n    addAnalyser(stream) {\n        if (!stream) return;\n\n        const { audioContext } = this;\n        if (!audioContext) return;\n\n        this.streamSource = audioContext.createMediaStreamSource(stream);\n        if (!this.analyser) {\n            const analyser = audioContext.createAnalyser();\n            analyser.minDecibels = -100;\n            analyser.maxDecibels = -30;\n            analyser.smoothingTimeConstant = 0.05;\n            analyser.fftSize = 1024;\n\n            this.analyser = analyser;\n        }\n        this.streamSource.connect(this.analyser);\n\n        this.timer = setInterval(() => this.analyse(), 100);\n    }\n\n    removeAnalyser(stream) {\n        if (!stream) return;\n\n        if (this.analyser && this.streamSource) {\n            this.streamSource.disconnect(this.analyser);\n        }\n\n        clearInterval(this.timer);\n    }\n\n    analyse() {\n        const { analyser } = this;\n        if (!analyser) return;\n\n        const array = new Uint8Array(analyser.frequencyBinCount);\n        analyser.getByteFrequencyData(array);\n        const value = getAmplitude(array, 1.5);\n\n        this.setState({\n            value\n        });\n    }\n\n    render() {\n        const { value } = this.state;\n\n        let d = '';\n        for (let i = 0; i < 35; i++) {\n            const x = i * 8 + 1.5;\n            d += `M${x},0v15Z`;\n        }\n\n        const bars = (\n            <svg className='group-call-mic-amplitude-bars' viewBox='0 0 275 15'>\n                <path d={d} fill='currentColor' strokeWidth={3}/>\n            </svg>\n        );\n\n        return (\n            <div className='group-call-mic-amplitude'>\n                {bars}\n                <div className='group-call-mic-amplitude-bars-accent' style={{ width: 275 * value }}>\n                    {bars}\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallMicAmplitude.propTypes = {\n    stream: PropTypes.object\n};\n\nexport default GroupCallMicAmplitude;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallMicAmplitude from './GroupCallMicAmplitude';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport { copy } from '../../Utils/Text';\nimport { canManageVoiceChats, getChatUsername } from '../../Utils/Chat';\nimport { getStream } from '../../Calls/Utils';\nimport { showSnackbar } from '../../Actions/Client';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport './GroupCallSettings.css';\n\nclass GroupCallSettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = { };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                const { openDeviceSelect } = this.state;\n                if (openDeviceSelect) {\n                    this.handleCloseDeviceSelect();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n\n                this.handleCancel();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            let muteSettings = { };\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const {\n                    mute_new_participants: muteNewParticipants,\n                    allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n                } = groupCall;\n\n                muteSettings = {\n                    muteNewParticipants,\n                    allowedChangeMuteNewParticipants\n                }\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo,\n                ...muteSettings\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.handleSelectDevice('inputAudio', CallStore.getInputAudioDeviceId());\n        navigator.mediaDevices.addEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.addEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.add(this.keyboardHandler);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        navigator.mediaDevices.removeEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.removeEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.remove(this.keyboardHandler);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n        if (!group_call) return;\n\n        const {\n            id,\n            mute_new_participants: muteNewParticipants,\n            allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n        } = group_call;\n        if (id !== groupCallId) return;\n\n        this.setState({\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        });\n    };\n\n    onDeviceChange = async () => {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        CallStore.devices = devices;\n\n        const outputDeviceId = CallStore.getOutputDeviceId();\n        const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n        const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n        const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n        const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n        const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n        this.setState({\n            devices,\n            outputDeviceId,\n            output,\n            inputAudioDeviceId,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideo\n        });\n    };\n\n    handleOutputChange = event => {\n        const outputDeviceId = event.target.value;\n\n        this.setState({ outputDeviceId });\n    }\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { currentGroupCall } = CallStore;\n\n        const username = getChatUsername(currentGroupCall ? currentGroupCall.chatId : 0);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n        showSnackbar(t('LinkCopied'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    handleOpenDeviceSelect = async type => {\n        switch (type) {\n            case 'inputAudio': {\n                const { inputAudio } = this.state;\n                if (!inputAudio.length) {\n                    return;\n                }\n                break;\n            }\n            case 'output': {\n                const { output } = this.state;\n                if (!output.length) {\n                    return;\n                }\n                break;\n            }\n        }\n\n        this.setState({\n            openDeviceSelect: { type }\n        });\n    };\n\n    handleCloseDeviceSelect = () => {\n        this.setState({\n            openDeviceSelect: null\n        });\n    };\n\n    handleSelectDevice = async (type, deviceId) => {\n        this.handleCloseDeviceSelect();\n\n        switch (type) {\n            case 'output': {\n                CallStore.setOutputDeviceId(deviceId);\n                this.setState({\n                    outputDeviceId: deviceId\n                });\n                break;\n            }\n            case 'inputAudio': {\n                const { currentGroupCall } = CallStore;\n                if (!currentGroupCall) return;\n\n                const { streamManager } = currentGroupCall;\n                if (!streamManager) return;\n\n                const { inputAudioStream, inputAudioDeviceId } = this.state;\n                if (inputAudioDeviceId === deviceId && inputAudioStream) return;\n\n                if (inputAudioStream) {\n                    inputAudioStream.getAudioTracks().forEach(t => {\n                        t.stop()\n                    });\n                }\n\n                const stream = await getStream({\n                    audio: { deviceId: { exact: deviceId } },\n                    video: false\n                });\n\n                this.setState({\n                    inputAudioDeviceId: deviceId,\n                    inputAudioStream: stream\n                });\n                break;\n            }\n            case 'inputVideo': {\n                break;\n            }\n        }\n    };\n\n    handleEnd = () => {\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        CallStore.leaveGroupCall(chatId, groupCallId, true);\n    };\n\n    handleMuteNewParticipants = () => {\n        const { groupCallId } = this.props;\n        const { muteNewParticipants } = this.state;\n\n        this.setState({\n            muteNewParticipants: !muteNewParticipants\n        });\n\n        CallStore.toggleMuteNewParticipants(groupCallId, !muteNewParticipants);\n    };\n\n    handleDone = async () => {\n        const { onClose } = this.props;\n        const { inputAudioDeviceId, inputAudioStream } = this.state;\n\n        if (inputAudioStream) {\n            if (inputAudioDeviceId !== CallStore.getInputAudioDeviceId()) {\n                await CallStore.setInputAudioDeviceId(inputAudioDeviceId, inputAudioStream);\n            } else {\n                inputAudioStream.getAudioTracks().forEach(t => {\n                    t.stop();\n                });\n            }\n        }\n\n        onClose && onClose();\n    };\n\n    handleCancel = () => {\n        const { onClose } = this.props;\n        const { inputAudioStream } = this.state;\n\n        if (inputAudioStream) {\n            inputAudioStream.getAudioTracks().forEach(x => {\n                x.stop();\n            });\n        }\n\n        onClose && onClose();\n    };\n\n    render() {\n        const { groupCallId, t } = this.props;\n        const {\n            inputAudioDeviceId,\n            inputAudioStream,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideo,\n            outputDeviceId,\n            output,\n            openDeviceSelect,\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        } = this.state;\n\n\n        const outputDeviceInfo = output.find(x => x.deviceId === outputDeviceId || !outputDeviceId && x.deviceId === 'default');\n        const outputString = !outputDeviceInfo || outputDeviceInfo.deviceId === 'default' || !outputDeviceInfo.deviceId || !outputDeviceInfo.label ? t('Default') : outputDeviceInfo.label;\n\n        const inputAudioDeviceInfo = inputAudio.find(x => x.deviceId === inputAudioDeviceId || !inputAudioDeviceId && x.deviceId === 'default');\n        const inputAudioString = !inputAudioDeviceInfo || inputAudioDeviceInfo.deviceId === 'default' || !inputAudioDeviceInfo.deviceId || !inputAudioDeviceInfo.label ? t('Default') : inputAudioDeviceInfo.label;\n\n        const { currentGroupCall } = CallStore;\n        const chatId = currentGroupCall ? currentGroupCall.chatId : 0;\n\n        const username = getChatUsername(chatId);\n\n        if (openDeviceSelect) {\n            const { type } = openDeviceSelect;\n            let items = [];\n            let deviceId = null;\n            switch (type) {\n                case 'output': {\n                    items = output;\n                    deviceId = outputDeviceId;\n                    break;\n                }\n                case 'inputAudio': {\n                    items = inputAudio;\n                    deviceId = inputAudioDeviceId;\n                    break;\n                }\n                case 'inputVideo': {\n                    items = inputVideo;\n                    deviceId = inputVideoDeviceId;\n                    break;\n                }\n            }\n\n            return (\n                <div className='group-call-settings-device-select'>\n                    <div className='group-call-settings-panel'>\n                        <div className='group-call-settings-panel-header'>\n                            <div className='group-call-panel-caption'>\n                                <div className='group-call-title'>{type === 'output' ? t('OutputDevice') : t('InputDevice')}</div>\n                            </div>\n                        </div>\n                        <div className='group-call-settings-panel-content'>\n                            {items.map(x => (\n                                <div key={x.deviceId} className='group-call-settings-panel-item' onClick={() => this.handleSelectDevice(type, x.deviceId)}>\n                                    <div className='group-call-settings-panel-item-title'>{x.label || t('Default')}</div>\n                                </div>\n                            ))}\n                        </div>\n                        <div className='group-call-settings-panel-buttons'>\n                            <div className='group-call-settings-panel-done' onClick={this.handleCloseDeviceSelect}>\n                                {t('OK')}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n\n\n        const canManage = canManageVoiceChats(chatId);\n        // console.log('[call][GroupCallSettings] render', muteNewParticipants, allowedChangeMuteNewParticipants);\n\n        return (\n            <div className='group-call-settings' onMouseDown={stopPropagation} onClick={this.handleCancel}>\n                <div className='group-call-settings-panel' onClick={stopPropagation}>\n                    <div className='group-call-settings-panel-header'>\n                        <div className='group-call-panel-caption'>\n                            <div className='group-call-title'>{t('Settings')}</div>\n                        </div>\n                    </div>\n                    <div className='group-call-settings-panel-content'>\n                        { canManage && allowedChangeMuteNewParticipants && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleMuteNewParticipants}>\n                                <div className='group-call-settings-panel-item-title'>{t('VoipGroupOnlyAdminsCanSpeak')}</div>\n                                <Switch\n                                    disableRipple\n                                    classes={{\n                                        root: 'group-call-settings-panel-switch-root',\n                                        switchBase: 'group-call-settings-panel-switch-base',\n                                        colorSecondary: 'group-call-settings-panel-switch-color-secondary',\n                                        checked: 'group-call-settings-panel-switch-checked',\n                                        track: 'group-call-settings-panel-switch-track'\n                                    }}\n                                    checked={muteNewParticipants}\n                                    onChange={this.handleMuteNewParticipants}/>\n                            </div>\n                        )}\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('output')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Speaker')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{outputString}</div>\n                        </div>\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputAudio')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Microphone')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{inputAudioString}</div>\n                        </div>\n                        <GroupCallMicAmplitude stream={inputAudioStream}/>\n                        { username && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleCopyLink}>\n                                {t('VoipGroupCopyInviteLink')}\n                            </div>\n                        )}\n                        { canManage && (\n                            <div className='group-call-settings-panel-item group-call-settings-panel-item-secondary' onClick={this.handleEnd}>\n                                {t('VoipGroupEndChat')}\n                            </div>\n                        )}\n                    </div>\n                    <div className='group-call-settings-panel-buttons'>\n                        <div className='group-call-settings-panel-done' onClick={this.handleDone}>\n                            {t('Done')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallSettings.propTypes = {\n    groupCallId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallSettings);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z' />,\n    'Tune'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TuneIcon from '../../Assets/Icons/Tune';\nimport { stopPropagation } from '../../Utils/Message';\nimport './GroupCallSettingsButton.css';\n\nclass GroupCallSettingsButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={onClick}>\n                <TuneIcon />\n            </div>\n        );\n    }\n}\n\nGroupCallSettingsButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default GroupCallSettingsButton;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallMicButton from './GroupCallMicButton';\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\nimport GroupCallParticipants from './GroupCallParticipants';\nimport GroupCallSettings from './GroupCallSettings';\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCallPanel.css';\n\nclass GroupCallPanel extends React.Component {\n    state = {\n        openSettings: false\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenSettings = async event => {\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    render() {\n        const { groupCallId, t } = this.props;\n        const { openSettings } = this.state;\n        // console.log('[call][GroupCallPanel] render');\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        return (\n            <div className='group-call-panel'>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption'>\n                        <div className='group-call-title'>{getChatTitle(chatId)}</div>\n                        <GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>\n                    </div>\n                    <div style={{ width: 48 }}/>\n                </div>\n                <div className='group-call-panel-participants scrollbars-hidden'>\n                    <GroupCallParticipants groupCallId={groupCallId}/>\n                </div>\n                <GroupCallPanelButtons>\n                    <GroupCallMicButton/>\n                    <div className='group-call-panel-button'>\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\n                        <div className='group-call-panel-button-text'>\n                            {t('Settings')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleLeave}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {t('Leave')}\n                        </div>\n                    </div>\n                </GroupCallPanelButtons>\n                {openSettings && <GroupCallSettings groupCallId={groupCallId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nGroupCallPanel.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport GroupCallPanel from './GroupCallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupCall.css';\n\nclass GroupCall extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('group-call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('group-call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('group-call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('group-call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('group-call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { groupCallId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='group-call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <GroupCallPanel groupCallId={groupCallId}/>\n            </div>\n        )\n    }\n}\n\nGroupCall.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default GroupCall;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport Actions from './Actions';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport GroupCall from './Calls/GroupCall';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport PipPlayer from './Player/PipPlayer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport CallStore from '../Stores/CallStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null,\n            groupCallId: 0\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.on('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.off('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdateGroupCallPanel = update => {\n        const { opened } = update;\n        const { currentGroupCall } = CallStore;\n\n        this.setState({\n            groupCallId: currentGroupCall && opened ? currentGroupCall.groupCallId : 0\n        });\n    };\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup, options } = update;\n\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false, options = null) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId && !options) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId, options);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            groupCallId,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n                {groupCallId && <GroupCall groupCallId={groupCallId}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}